import{_ as i,c as a,o as n,ak as l}from"./chunks/framework.CmzJUe0_.js";const t="/assets/linux_20250310174016.DJJNyjKT.png",p="/assets/linux_20250311113348.BVcAoHzq.png",h="/assets/linux_20250311113434.D4rT9LXs.png",e="/assets/linux_20250311113822.UCZZZFo9.png",k="/assets/linux_20250313161929.DqxO2ni1.png",r="/assets/linux_20250313163543.3QPMT_Ge.png",d="/assets/linux_20250313163826.BpCWHJW8.png",o="/assets/linux_20250313164021.CMMjWcnD.png",F="/assets/linux_20250313164328.vo__KtIp.png",g="/assets/linux_20250311153640.Crn86o27.png",c="/assets/linux_20250311153809.7c6yOOv4.png",u="/assets/linux_20250311155149.CJQU7jXx.png",y="/assets/linux_20250311160044.Hr_3c334.png",C="/assets/linux_20250311160753.DBZAFGcG.png",E="/assets/linux_20250313165150.CAa3W12K.png",B="/assets/linux_20250314092008.BiQCnnGQ.png",b="/assets/linux_20250314102524.BJeOIsPF.png",m="/assets/linux_20250314103136.CAktdQlC.png",x="/assets/linux_20250314104332.Cb_F8uZ-.png",_="/assets/linux_20250314113006.KZEvEd7B.png",v="/assets/linux_202503152337.C9oT5IC5.png",D="/assets/linux_20250314172903.DBqlosoy.png",I=JSON.parse('{"title":"Linux Mint操作系统笔记","description":"","frontmatter":{"title":"Linux Mint操作系统笔记","date":"2025-03-10T00:00:00.000Z","sidebar":"auto","categories":["系统"],"tags":["Mint","Linux"]},"headers":[],"relativePath":"blogs/Linux/Linux Mint操作系统笔记.md","filePath":"blogs/Linux/Linux Mint操作系统笔记.md"}'),A={name:"blogs/Linux/Linux Mint操作系统笔记.md"};function q(L,s,M,f,P,S){return n(),a("div",null,s[0]||(s[0]=[l('<p>[toc]</p><h1 id="linux-mint操作系统笔记" tabindex="-1">Linux Mint操作系统笔记 <a class="header-anchor" href="#linux-mint操作系统笔记" aria-label="Permalink to &quot;Linux Mint操作系统笔记&quot;">​</a></h1><p>Linux Mint 是一款基于 Ubuntu 和 Debian 的知名发行版，它的用户体验非常友好，深受广大 Linux 爱好者和日常用户的青睐，特别适合那些从 Windows「转投」过来的 Linux 新手。</p><p>目前最新的Linux Mint 系统版本为22.1</p><p><a href="https://www.linuxmint.com/" target="_blank" rel="noreferrer">Linux Mint 官网 https://www.linuxmint.com/</a></p><p>Linux Mint 官网截图 <img src="'+t+'" alt="linux_20250310174016.png"></p><blockquote><p>Linux Mint 之所以能在众多 Linux 发行版中火爆出圈，离不开它一系列核心功能和优势。以下是一些让 Mint 备受用户喜爱的独特亮点：</p></blockquote><ol><li>Cinnamon 桌面：界面简单易用，优雅可靠。</li><li>稳定性：基于 Ubuntu LTS 的可靠保障。</li><li>免驱兼容：内置多数硬件驱动，即装即用。</li><li>丰富生态：通过软件中心可快速安装开发工具、办公套件等。</li></ol><blockquote><p>Linux Mint 有三个桌面环境。</p></blockquote><ul><li>Cinnamon 桌面环境。该桌面环境界面现代、功能丰富，适合大多数用户；</li><li>Xfce 桌面环境，轻量高效，适合老旧设备；</li><li>MATE 桌面环境则介于两者之间，兼顾性能和美观。</li></ul><h2 id="linux-mint-安装" tabindex="-1">Linux Mint 安装 <a class="header-anchor" href="#linux-mint-安装" aria-label="Permalink to &quot;Linux Mint 安装&quot;">​</a></h2><blockquote><p>Linux Mint 22 硬件要求</p></blockquote><ul><li>内存：至少需要 2GB，但建议 4GB 或更大，运行更流畅。</li><li>处理器：双核处理器起步，性能足够应对日常使用。</li><li>磁盘空间：最低需要 20GB 可用空间，但建议预留 100GB 或以上，方便后续安装软件和存储文件。</li><li>显示器：分辨率至少 1024×768，确保显示效果清晰。</li><li>互联网连接：安装过程推荐连网，以便获取最新更新和驱动。</li><li>U 盘：准备一个 4GB 或更大容量的 U 盘，用于制作启动盘。</li></ul><h3 id="第一步-下载-linux-mint-22-1-安装镜像" tabindex="-1">第一步：下载 Linux Mint 22.1 安装镜像 <a class="header-anchor" href="#第一步-下载-linux-mint-22-1-安装镜像" aria-label="Permalink to &quot;第一步：下载 Linux Mint 22.1 安装镜像&quot;">​</a></h3><p>推荐下载 Linux Mint Cinnamon桌面环境的版本。将<code>.iso</code>文件保存到本地，接下来制作 Linux Mint 的启动 U 盘。</p><h3 id="第二步-制作-linux-mint-启动-u-盘" tabindex="-1">第二步：制作 Linux Mint 启动 U 盘 <a class="header-anchor" href="#第二步-制作-linux-mint-启动-u-盘" aria-label="Permalink to &quot;第二步：制作 Linux Mint 启动 U 盘&quot;">​</a></h3><p>在网上下载Linux启动U盘的工具软件，进行制作。自行百度查询。</p><h3 id="第三步-安装-linux-mint" tabindex="-1">第三步：安装 Linux Mint <a class="header-anchor" href="#第三步-安装-linux-mint" aria-label="Permalink to &quot;第三步：安装 Linux Mint&quot;">​</a></h3><blockquote><p>第一步：先插入 Linux Mint 启动 U 盘并开机，进入 BIOS/UEFI 设置界面，然后选择 U 盘引导。</p></blockquote><blockquote><p>第二步：系统启动后，在 Grub 菜单中选择「Start Linux Mint」并按回车。</p></blockquote><p><img src="'+p+'" alt="linux_20250311113348.png"></p><blockquote><p>第三步：桌面加载成功后，双击「Install Linux Mint」启动安装向导。</p></blockquote><p><img src="'+h+'" alt="linux_20250311113434.png"></p><blockquote><p>第四步：进入到系统安装界面。选中语言，键盘布局，时区什么的。</p></blockquote><blockquote><p>第五步： 选择系统的安装类型</p></blockquote><ol><li>若要全新安装，请选择「清除整个磁盘并安装 Linux Mint」，再点击「现在安装」。</li><li>若有特殊需求，选中高级特性，手动配置磁盘分区等。</li></ol><p><img src="'+e+'" alt="linux_20250311113822.png"></p><blockquote><p>第六步： 创建磁盘分区</p></blockquote><p>在linux中如果有多个硬盘的话，linux一般会将多个硬盘识别为 /dev/sda,/dev/sab.....</p><ol><li>先选择一个设备列表中的磁盘，作为系统盘，类似windows系统的C盘，例如dev/sda。如果硬盘中已经存在分区，可以先删除后，在重新在硬盘中建立新的分区。</li></ol><p><img src="'+k+'" alt="linux_20250313161929.png"></p><ol start="2"><li>在系统盘上创建 EFI 系统分区：这是 UEFI 系统的必选分区。 它将保存由 UEFI 固件启动的 EFI 引导加载程序和驱动程序。</li></ol><p>创建一个新的分区，设置 EFI 分区的属性：</p><ul><li>大小：100 ~ 500 MB</li><li>新分区类型：主分区</li><li>新分区位置：空间起始位置</li><li>用于：EFI 系统分区</li></ul><p><img src="'+r+'" alt="linux_20250313163543.png"></p><ol start="3"><li>在系统盘上创建 SWAP 交换空间 分区：这个分区相当于虚拟内存。当实际内存即将用完的时候，会启用虚拟内存。平时不启用。</li></ol><p>创建一个新的分区，设置 SWAP 交换空间 分区的属性：</p><ul><li>大小：推荐与内存大小相同。</li><li>新分区类型：主分区</li><li>新分区位置：空间起始位置</li><li>用于：交换空间</li></ul><p><img src="'+d+'" alt="linux_20250313163826.png"></p><ol start="4"><li>在系统盘上创建创建 BIOS 启动区域 分区：这个分区用于存储BIOS程序代码。当主板的BIOS损坏的时候，用这个可以代替。</li></ol><p>创建一个新的分区，设置 保留 BIOS 启动区域 分区的属性：</p><ul><li>大小：1 MB</li><li>新分区类型：主分区</li><li>新分区位置：空间起始位置</li><li>用于：保留 BIOS 启动区域</li></ul><p><img src="'+o+'" alt="linux_20250313164021.png"></p><ol start="5"><li>在系统盘上创建 根分区: 根分区就是根目录所在的磁盘位置。</li></ol><p>创建一个新的分区，设置根分区的属性：</p><ul><li>大小：剩余的所有空闲空间</li><li>新分区类型：主分区</li><li>新分区位置：空间起始位置</li><li>用于：Ext4 日志文件系统</li><li>挂载点：<code>/</code></li></ul><p><img src="'+F+'" alt="linux_20250313164328.png"></p><ol start="6"><li>创建好所有分区后，点击现在安装。</li></ol><p><span style="color:red;">PS：当我们选择一个磁盘作为系统盘之后，linux的系统文件都会在这个系统盘上。其他磁盘会以目录的形式挂载到/dev目录下。</span></p><blockquote><p>第七步： 选择当前时区，创建用户账户</p></blockquote><blockquote><p>第八步： 完成Linux Mint 安装之后,重启系统即可。</p></blockquote><p><img src="'+g+'" alt="linux_20250311153640.png"></p><blockquote><p>第九步： 重启完成后，就可以登录到 Linux Mint 桌面了。</p></blockquote><p><img src="'+c+'" alt="linux_20250311153809.png"></p><h2 id="linux-mint-使用" tabindex="-1">Linux Mint 使用 <a class="header-anchor" href="#linux-mint-使用" aria-label="Permalink to &quot;Linux Mint 使用&quot;">​</a></h2><p>刚装好 Linux Mint，需要对系统进行一些修改，方便更好的使用Linux Mint系统。</p><h3 id="更换国内软件源" tabindex="-1">更换国内软件源 <a class="header-anchor" href="#更换国内软件源" aria-label="Permalink to &quot;更换国内软件源&quot;">​</a></h3><p>Linux Mint 默认的软件源可能与你远隔重洋，下载速度自然也就慢吞吞的。为了加速下载，我们可以手动切换到国内源。</p><p>打开 系统管理 &gt;更新管理器&gt; 软件源。将「主要」和「基础」镜像更改为国内软件源。然后点击右下角的「更新 APT 缓存」并等待更新完成。</p><p><img src="'+u+`" alt="linux_20250311155149.png"></p><h3 id="更新软件包" tabindex="-1">更新软件包 <a class="header-anchor" href="#更新软件包" aria-label="Permalink to &quot;更新软件包&quot;">​</a></h3><p>换好国内软件源后，可以开始更新软件包了。打开「终端」，输入以下 2 条命令，将系统中的所有软件包升级到最新版本。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 更新软件包索引</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 升级所有软件包</span></span></code></pre></div><h3 id="检查并安装驱动程序" tabindex="-1">检查并安装驱动程序 <a class="header-anchor" href="#检查并安装驱动程序" aria-label="Permalink to &quot;检查并安装驱动程序&quot;">​</a></h3><p>Linux Mint 自带的「驱动管理器」可以自动检测电脑中的硬件，比如显卡、打印机、Wi-Fi 网卡等，并推荐最合适的驱动程序。</p><p>打开驱动管理器后，系统会自动扫描硬件，并列出推荐的驱动程序。如果有需要安装的驱动，直接勾选即可。点击 应用更改 ，然后等待驱动安装完成。</p><p><img src="`+y+'" alt="linux_20250311160044.png"></p><h3 id="安装多媒体解码器" tabindex="-1">安装多媒体解码器 <a class="header-anchor" href="#安装多媒体解码器" aria-label="Permalink to &quot;安装多媒体解码器&quot;">​</a></h3><p>如果你在安装 Linux Mint 时跳过了这一步，也可以手动安装多媒体解码器，从而流畅播放 MP4 视频或其他多媒体文件。</p><p>打开软件管理器，在搜索栏中输入codecs，找到 多媒体编码器 ，然后点击 安装 。</p><p><img src="'+C+'" alt="linux_20250311160753.png"></p><h3 id="安装中文-pingyin-输入法" tabindex="-1">安装中文 pingyin 输入法 <a class="header-anchor" href="#安装中文-pingyin-输入法" aria-label="Permalink to &quot;安装中文 pingyin 输入法&quot;">​</a></h3><p>在Linux mint 系统设置中找到输入法设置，按图所示安装中文 pingyin 输入法</p><p><img src="'+E+'" alt="linux_20250313165150.png"></p><h3 id="设置桌面图标不自动排列" tabindex="-1">设置桌面图标不自动排列 <a class="header-anchor" href="#设置桌面图标不自动排列" aria-label="Permalink to &quot;设置桌面图标不自动排列&quot;">​</a></h3><p>默认情况下，桌面的快捷方式图标是自动排列的。如果我们想要将桌面的快捷方式图标进行自由摆放的话。需要如下设置。</p><p>在桌面点击右键，选择自定义。进入到显示器布局设置。将自动排列选项关闭即可。</p><p><img src="'+B+`" alt="linux_20250314092008.png"></p><h3 id="安装git-和-smartgit客户端" tabindex="-1">安装git 和 SmartGit客户端 <a class="header-anchor" href="#安装git-和-smartgit客户端" aria-label="Permalink to &quot;安装git 和 SmartGit客户端&quot;">​</a></h3><p>Linux Mint 基于 Ubuntu，因此可以使用 apt 包管理器来安装 Git。</p><p>安装Git</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先更新软件包列表，获取最新的软件信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询git版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><p>安装SmartGit客户端</p><ol><li>进入到 SmartGit 官网，下载SmartGit deb安装包</li><li>可以通过linux mint的图像化安装界面，直接安装。</li><li>运行 SmartGit</li></ol><p><img src="`+b+'" alt="linux_20250314102524.png"><img src="'+m+'" alt="linux_20250314103136.png"></p><h3 id="安装向日葵远程控制" tabindex="-1">安装向日葵远程控制 <a class="header-anchor" href="#安装向日葵远程控制" aria-label="Permalink to &quot;安装向日葵远程控制&quot;">​</a></h3><p>先进入到向日葵官网，下载向日葵的linux版本安装包</p><p>由于linux mint是基于ubuntu系统的，因此下载ubuntu系统的版本的向日葵软件包即可。可以选择图像界面版本的。 <img src="'+x+`" alt="linux_20250314104332.png"></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装软件包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SunloginClient_15.2.0.63064_amd64.deb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装完成后，启动命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/sunlogin/bin/sunloginclient</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 卸载命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sunloginclient</span></span></code></pre></div><p>当向日葵安装完成后，可以在系统的程序面板中找到它，将其添加到桌面即可。</p><p><img src="`+_+`" alt="linux_20250314113006.png"></p><blockquote><p>无法安装的解决办法</p></blockquote><p>情况①：若安装的过程中 缺少依赖包。执行下面命令，然后重新安装即可。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于修复软件包依赖关系并自动安装缺失依赖的命令</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -f（--fix-missing） 修复依赖包</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -y（--yes） 自动确认</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>情况②：若使用<code>sudo apt-get install -f -y</code>命令，提示有几个软件包无法下载。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新软件包列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新修复</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>情况③：若<code>sudo apt-get update</code> 更新失败。则可能需要更换软件源，才能下载缺失的依赖包。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编辑文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/official-package-repositories.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加下面内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以 Linux Mint 21.x 为例，基于 Ubuntu 22.04</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/linuxmint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jammy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backport</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jammy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jammy-updates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jammy-backports</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jammy-security</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新软件源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><h3 id="安装vim" tabindex="-1">安装vim <a class="header-anchor" href="#安装vim" aria-label="Permalink to &quot;安装vim&quot;">​</a></h3><p>在linux mint22 自带的软件管理器中搜索vim,下载安装即可。</p><h3 id="安装微信" tabindex="-1">安装微信 <a class="header-anchor" href="#安装微信" aria-label="Permalink to &quot;安装微信&quot;">​</a></h3><p>目前微信也推出了linux的版本。网址：<code>https://linux.weixin.qq.com/</code></p><p>下载微信的deb软件包，使用linux mint 自带软件管理器安装即可。</p><h3 id="安装网易云音乐" tabindex="-1">安装网易云音乐 <a class="header-anchor" href="#安装网易云音乐" aria-label="Permalink to &quot;安装网易云音乐&quot;">​</a></h3><ol><li>下载 网易云音乐的linux 安装包</li></ol><p>下载链接：<code>https://d1.music.126.net/dmusic/netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</code></p><ol start="2"><li>安装</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</span></span></code></pre></div><ol start="3"><li>修改配置</li></ol><p>当执行完安装命令之后，应用还无法打开。需要去修改配置文件才行。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 打开文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/netease-cloud-music</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 编辑文件内容</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dirname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readlink</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\${0}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;)&quot;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/libs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QT_PLUGIN_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/plugins </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QT_QPA_PLATFORM_PLUGIN_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/plugins/platforms</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /lib/x86_64-linux-gnu/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ##添加这行代码</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;/netease-cloud-music</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $@</span></span></code></pre></div><ol start="4"><li>运行网易云音乐</li></ol><p><img src="`+v+`" alt="linux_202503152337.png"></p><h3 id="安装-samba服务-共享文件夹" tabindex="-1">安装 samba服务 共享文件夹 <a class="header-anchor" href="#安装-samba服务-共享文件夹" aria-label="Permalink to &quot;安装 samba服务 共享文件夹&quot;">​</a></h3><p>Samba 是在 Linux 和 Unix 系统上实现 SMB/CIFS 协议的一个免费软件，它可以让 Linux 系统与 Windows 系统之间进行文件和打印机共享。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装samba服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> samba</span></span></code></pre></div><h3 id="安装-ssh-服务" tabindex="-1">安装 SSH 服务 <a class="header-anchor" href="#安装-ssh-服务" aria-label="Permalink to &quot;安装 SSH 服务&quot;">​</a></h3><p>Samba 是在 Linux 和 Unix 系统上实现 SMB/CIFS 协议的一个免费软件，它可以让 Linux 系统与 Windows 系统之间进行文件和打印机共享。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查ssh服务是否已经安装了。如果没有输出结果，说明 SSH 服务未安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh-server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装ssh服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh-server</span></span></code></pre></div><h3 id="安装docker" tabindex="-1">安装docker <a class="header-anchor" href="#安装docker" aria-label="Permalink to &quot;安装docker&quot;">​</a></h3><ol><li>先卸载旧版本docker 或者 任何可能冲突的软件包。</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行以下命令卸载所有冲突的软件包</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pkg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker.io</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-doc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose-v2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> podman-docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $pkg; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div><ol start="2"><li>在安装docker之前，需要先安装依赖软件包</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-transport-https</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ca-certificates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnupg</span></span></code></pre></div><ol start="3"><li>添加 Docker 官方 GPG 密钥</li></ol><p>将 Docker GPG 存储库密钥导入Mint 系统中。用于验证下载的软件包的完整性和真实性</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加Docker 官方 GPG 密钥（国内可能无法访问）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.docker.com/linux/ubuntu/gpg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dearmor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/keyrings/docker-archive-keyring.gpg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加阿里云 搭建的 docker 的 GPG 密钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dearmor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/keyrings/docker-archive-keyring.gpg</span></span></code></pre></div><ol start="4"><li>添加 Docker 软件源</li></ol><p>由于 Linux Mint 22.1 基于 Ubuntu 24.04（代号 noble），因此需要添加 Docker 的 APT 软件包源如下。</p><p><span style="color:red;">注意命令中的是noble stable。与ubuntu的代号有关。</span></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加官方的 Docker 软件源（国内可能无法访问）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;deb [arch=$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --print-architecture</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu noble stable&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/docker.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加阿里云的 Docker 软件源</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;deb [arch=$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --print-architecture</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] http://mirrors.aliyun.com/docker-ce/linux/ubuntu noble stable&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/docker.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 刷新软件包列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><ol start="5"><li>在 Linux Mint 22 上安装 Docker</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd.io</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-buildx-plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose-plugin</span></span></code></pre></div><p>该命令会按照下面的Docker组件：</p><ul><li>docker-ce：Docker 引擎本身。</li><li>docker-ce-cli ：一个命令行工具，可让您与 Docker 守护程序通信。</li><li><code>containerd.io</code> ：管理容器生命周期的容器运行时。</li><li>docker-buildx-plugin：Docker 的这个扩展增强了构建镜像的能力，主要集中在多平台构建上。</li><li>docker-compose-plugin：一个配置管理插件，可帮助使用单个 YAML 文件管理多容器 Docker 应用程序。</li></ul><ol start="6"><li>检查docker版本并设置docker 开机自启动</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># docker版本查询</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置开机启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is-active</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><p><img src="`+D+`" alt="linux_20250314172903.png"></p><h4 id="有时候无法下载某个国内镜像-可以修改-docker-配置文件" tabindex="-1">有时候无法下载某个国内镜像，可以修改 Docker 配置文件 <a class="header-anchor" href="#有时候无法下载某个国内镜像-可以修改-docker-配置文件" aria-label="Permalink to &quot;有时候无法下载某个国内镜像，可以修改 Docker 配置文件&quot;">​</a></h4><p>使用文本编辑器打开 /etc/docker/daemon.json 文件，如果该文件不存在则创建它。</p><p>文件内容如下，下面的链接都算能够访问的。否则就进行替换。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;registry-mirrors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;https://docker-0.unsee.tech&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;https://docker-cf.registry.cyou&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;https://docker.1panel.live&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;https://hub.fast360.xyz&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>然后重启docker服务，让配置生效。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div>`,144)]))}const U=i(A,[["render",q]]);export{I as __pageData,U as default};
