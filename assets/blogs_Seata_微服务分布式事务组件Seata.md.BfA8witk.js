import{_ as i}from"./chunks/20220728161129.9vGko5Qv.js";import{_ as a,c as n,o as l,ak as t}from"./chunks/framework.CmzJUe0_.js";const h="/assets/seata_20231213211420.YTz7hTZU.png",p="/assets/seata_20231213212116.DWblnqrd.png",k="/assets/seata20220822144529.XsGh3WDW.png",e="/assets/seata20220822145935.B1Cq_mkv.png",E="/assets/seata20220822151034.cu1Z297Q.png",r="/assets/seata20220822155036.n98Nmu6O.png",d="/assets/seata20220822154748.DmjW89nU.png",g="/assets/seata20220822160139.6cMbZilX.png",y="/assets/seata_20231214011524.C7sHHtW9.png",o="/assets/seata_20231214131508.D6vgoi5C.png",c="/assets/seata20220824095707.Bex0tw22.png",F="/assets/seata20220824095943.Cuj9nl-c.png",A="/assets/seata20220823171307.MujX9tIc.png",C="/assets/seata20220823172222.Bt1857zl.png",b="/assets/seata20220823173928.Bugee5cv.png",D="/assets/seata_20231214192538.Cj0Z_2yG.png",u="/assets/seata_20231214205817.CEziWSyc.png",m="/assets/seata_20231214212737.DVMAhdjg.png",_="/assets/seata20220822224203.CpQ8_mUM.png",B="/assets/seata20220822224609.DmS-2Y7t.png",T="/assets/seata20220822224701.D-13d-Gs.png",S="/assets/seata_20231214222438.C9l_TRfc.png",q="/assets/seata_20231214224909.ahpe2E3O.png",v="/assets/seata20220822230419.BE7c8ZxR.png",f="/assets/seata_20231214233424.BqQnlgSS.png",M=JSON.parse('{"title":"微服务分布式事务组件Seata","description":"","frontmatter":{"title":"微服务分布式事务组件Seata","date":"2022-08-22T00:00:00.000Z","sidebar":"auto","categories":["后端"],"tags":["Seata"]},"headers":[],"relativePath":"blogs/Seata/微服务分布式事务组件Seata.md","filePath":"blogs/Seata/微服务分布式事务组件Seata.md"}'),x={name:"blogs/Seata/微服务分布式事务组件Seata.md"};function R(I,s,N,P,L,V){return l(),n("div",null,s[0]||(s[0]=[t('<p>[toc]</p><h1 id="微服务分布式事务组件seata" tabindex="-1">微服务分布式事务组件Seata <a class="header-anchor" href="#微服务分布式事务组件seata" aria-label="Permalink to &quot;微服务分布式事务组件Seata&quot;">​</a></h1><p>Seata是分布式事务的当前解决方案。当前Seata版本为1.5.1</p><p>下图为微服务架构图 <img src="'+i+'" alt="20220728161129.png"></p><p>目前SpringCloudAlibaba中各个组件的版本搭配</p><table tabindex="0"><thead><tr><th>Spring Cloud Alibaba Version</th><th>Sentinel Version</th><th>Nacos Version</th><th>RocketMQ Version</th><th>Dubbo Version</th><th>Seata Version</th></tr></thead><tbody><tr><td>2.2.8.RELEASE</td><td>1.8.4</td><td>2.1.0</td><td>4.9.3</td><td>~</td><td>1.5.1</td></tr></tbody></table><h2 id="分布式事务" tabindex="-1">分布式事务 <a class="header-anchor" href="#分布式事务" aria-label="Permalink to &quot;分布式事务&quot;">​</a></h2><h3 id="事务的分类" tabindex="-1">事务的分类 <a class="header-anchor" href="#事务的分类" aria-label="Permalink to &quot;事务的分类&quot;">​</a></h3><p>事务本质上就是一组逻辑操作。事务的原子性要求事务内的所有逻辑操作要么全部完成，要么全部失败。</p><p>事务主要分为本地事务和分布式事务两种。</p><blockquote><p>本地事务</p></blockquote><p>本地事务一般是指服务自身的逻辑操作。并且只涉及到一个服务，一个数据库。</p><p>本地事务的ACID特性是由数据库直接提供支持。</p><p><img src="'+h+'" alt="seata_20231213211420.png"></p><blockquote><p>分布式事务</p></blockquote><p>分布式事务一般是指多个服务共同组成的逻辑操作。并且会涉及到多个服务，多个数据库。</p><p>简而言之，分布式事务可以理解为多个本地事务组合为一个大事务。</p><p><img src="'+p+'" alt="seata_20231213212116.png"></p><p>由于分布式事务涉及到多个数据库，那么分布式事务的ACID特性就无法单纯由数据库的事务机制来提供了。</p><h3 id="分布式事务的问题" tabindex="-1">分布式事务的问题 <a class="header-anchor" href="#分布式事务的问题" aria-label="Permalink to &quot;分布式事务的问题&quot;">​</a></h3><p>由于分布式事务是由多个本地事务组成的。而每个本地事务都有自己的业务逻辑操作和数据库操作。</p><p>当分布式事务中的某个操作失败了，那么为了保证分布式事务的原子性，分布式事务中的其他读写操作也要进行失败处理。只有当分布式事务中的所有操作都成功了，那么这个分布式事务才算成功。</p><p>即分布式事务中的所有操作，要么全部成功，要么全部失败。</p><h3 id="分布式事务的使用场景" tabindex="-1">分布式事务的使用场景 <a class="header-anchor" href="#分布式事务的使用场景" aria-label="Permalink to &quot;分布式事务的使用场景&quot;">​</a></h3><p>通常情况下，事务的ACID特性都是由数据库来实现。例如Spring事务的底层就是调用各个数据库的事务实现的。</p><p>由于分布式事务涉及到多个服务，多个数据库。那么分布式事务的ACID特性就无法单纯由数据库的事务来提供了。</p><p>分布式事务的使用场景如下：</p><ol><li><p>跨库事务: 跨库事务指的是一个业务功能需要操作多个数据库。这种情况下会面临着分布式事务的问题。 <img src="'+k+'" alt="seata20220822144529.png"></p></li><li><p>分库分表: 当数据库分库分表之后，一个业务功能也会涉及到操作多个数据库的情况。此时要保证多个数据库的操作要么都成功，要么都失败，因此分库分表的情况下也会面临着分布式事务的问题。 <img src="'+e+'" alt="seata20220822145935.png"></p></li><li><p>微服务: 在微服务架构下，一个业务功需要调用多个服务，多个数据库。那么也会面临着分布式事务的问题。 <img src="'+E+'" alt="seata20220822151034.png"></p></li></ol><h3 id="解决分布式事务问题的理论基础" tabindex="-1">解决分布式事务问题的理论基础 <a class="header-anchor" href="#解决分布式事务问题的理论基础" aria-label="Permalink to &quot;解决分布式事务问题的理论基础&quot;">​</a></h3><p>由于分布式事务，涉及到多个事务，多个数据库。那么如何保证分布式事务中的操作要么全部完成，要么全部失败。</p><p>目前解决分布式事务问题的理论基础，有2PC和3PC协议。</p><h4 id="_2pc协议" tabindex="-1">2PC协议 <a class="header-anchor" href="#_2pc协议" aria-label="Permalink to &quot;2PC协议&quot;">​</a></h4><p>2PC协议，全称2阶段提交协议。2PC协议将分布式事务划分为2个阶段来完成。</p><blockquote><p>阶段1(准备阶段):</p></blockquote><ol><li>事务协调者向所有的事务参与者发送准备请求。</li><li>各个参与者接收到准备请求后，执行各自的事务操作，但不提交事务。</li><li>各个参与者将事务操作完成后，将操作结果告诉给事务协调者。</li><li>事务协调者收到各个参与者的事务操作结果后。如果所有参与者的事务操作都完成了，那么进入到阶段2。否则就进入到回退阶段。</li></ol><p><img src="'+r+'" alt="seata20220822155036.png"></p><ul><li>协调者:用于管理分布式事务中的所有事务.</li><li>参与者:可以是数据库,也可以是单个服务.</li></ul><blockquote><p>阶段1（准备阶段。错误情况下）</p></blockquote><ol><li>如果在阶段1中，协调者没有收到所有参与者的成功响应。</li><li>那么协调者会给所有参与者发送回退请求。让所有参与者进行回退操作。</li><li>由于阶段1的参与者都没有事务提交，因此阶段1的参与者都可以进行事务回退操作。</li></ol><blockquote><p>阶段2(提交阶段。正常情况下)</p></blockquote><ol><li>当阶段1完成后，即协调者收到所有参与者的成功响应后。开始进行阶段2。</li><li>协调者会向所有参与者发送 Commit 提交请求。</li><li>参与者收到 Commit 提交请求后，进行事务提交。事务提交完成后，释放事务占用的所有资源。</li><li>参与者在事务提交完成之后向协调者发送成功响应。</li><li>协调者接收到所有参与者的 YES 响应后，那么分布式事务就完成了。</li></ol><p><img src="'+d+'" alt="seata20220822154748.png"></p><blockquote><p>阶段2(提交阶段。错误情况下)</p></blockquote><p>中断事务并回退:</p><ol><li>当参与者的事务提交失败。会向协调者发送 NO 响应。</li><li>当协调者收到参与者的 NO 响应后，表示有某个事务执行失败了。</li><li>此时协调者会向所有参与者发送 Rollback 回退请求。</li><li>参与者收到 Rollback 回退请求后，参与者会使用阶段1生成的 Undo 日志执行事务回滚，然后释放事务占用的所有资源。</li><li>参与者执行完事务回滚后，向协调者发送 Ack 响应。</li><li>协调者接收到所有参与者的 Ack 响应后，完成分布式事务的回退操作。</li></ol><p><img src="'+g+'" alt="seata20220822160139.png"></p><h4 id="_2pc协议的问题" tabindex="-1">2PC协议的问题 <a class="header-anchor" href="#_2pc协议的问题" aria-label="Permalink to &quot;2PC协议的问题&quot;">​</a></h4><ol><li>若网络异常，导致参与者收不到协调者信息，那么参与者会一直阻塞下去。</li><li>如果协调者宕机，那么参与者会一直阻塞下去。并一直占用资源。</li><li>在阶段2中，如果网络异常，导致部分参与者没有收到协同者的 Commit/Rollback 请求，而其他参与者则正常收到 Commit/Rollback 操作。那么没有收到请求的参与者则继续阻塞。这时，参与者之间的数据就不再一致了。</li></ol><h2 id="seata介绍" tabindex="-1">Seata介绍 <a class="header-anchor" href="#seata介绍" aria-label="Permalink to &quot;Seata介绍&quot;">​</a></h2><p>Seata是一款阿里巴巴开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。</p><p><a href="https://seata.io/zh-cn/" target="_blank" rel="noreferrer">Seata官网</a></p><blockquote><p>在 Seata 的架构中，有三个重要的角色。</p></blockquote><ul><li>TC 事务协调者(Transaction Coordinator) ：用于维护全局和分支事务的状态，驱动全局事务提交或回滚。</li><li>TM 事务管理器(Transaction Manager) ：用于定义全局事务的范围：开始全局事务、提交或回滚全局事务。</li><li>RM 资源管理器(Resource Manager) ：用于管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</li></ul><p><span style="color:red;">其中TC为单独部署的Seata Server服务端，TM和RM为嵌入到服务应用中的Seata Client客户端。</span></p><p><img src="'+y+'" alt="seata_20231214011524.png"></p><p>如图所示，三个角色在分布式事务中的作用。其中Business服务需要调用Stock服务，Order服务，Account服务。</p><h2 id="seata-服务端-tc角色-部署" tabindex="-1">Seata 服务端（TC角色）部署 <a class="header-anchor" href="#seata-服务端-tc角色-部署" aria-label="Permalink to &quot;Seata 服务端（TC角色）部署&quot;">​</a></h2><p>① 先下载Seata 服务端的安装包，注意Seata的版本要与SpringCloudAlibaba的版本要搭配。</p><p><a href="https://github.com/seata/seata/releases" target="_blank" rel="noreferrer">下载地址 https://github.com/seata/seata/releases</a></p><p>Seata 服务端安装包目录 <img src="'+o+'" alt="seata_20231214131508.png"></p><p>② Seata服务端有3种持久化模式（store.mode）</p><ul><li>file：(默认单机模式)本地文件模式，全局事务会话信息读写在内存中,并持久化到本地文件/bin/sessionStore/root.data，性能较高。</li><li>db：数据库模式（集群模式），全局事务会话信息通过db共享，性能差些。（mysql数据库仅支持5.7+版本）</li><li>redis：redis模式，性能较高,存在事务信息丢失风险,需要提前配置redis持久化配置。</li></ul><p>③ 启动Seata服务端</p><ul><li>如果是windows环境，则运行/bin/seata-server.bat</li><li>如果是linux环境，则运行/bin/seata-server.sh</li></ul><p>④ 访问seata服务端界面。默认访问地址：localhost:7091/#/login。账号密码是seata/seata</p><p><img src="'+c+'" alt="seata20220824095707.png"><img src="'+F+'" alt="seata20220824095943.png"></p><h4 id="配置seata服务端存持久化模式为db" tabindex="-1">配置Seata服务端存持久化模式为db <a class="header-anchor" href="#配置seata服务端存持久化模式为db" aria-label="Permalink to &quot;配置Seata服务端存持久化模式为db&quot;">​</a></h4><ol><li>修改Seata服务端配置文件/conf/application.yml,修改为store.mode=&quot;db&quot;</li><li>将application.example.yml中的数据库db配置信息，复制到application.yml中,修改store.db相关属性。</li></ol><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">db</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ## 模式改为db</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #### 下面是从application.example.yml中复制数据库连接信息到application.yml的</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">druid</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      db-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mysql</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.mysql.jdbc.Driver</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:mysql://127.0.0.1:3306/seata-mysql?rewriteBatchedStatements=true</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      min-conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      max-conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      global-table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">global_table</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      branch-table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">branch_table</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      lock-table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lock_table</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      distributed-lock-table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">distributed_lock</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      query-limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      max-wait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span></span></code></pre></div><ol start="3"><li>在数据库中创建库和表。</li></ol><p>先创建数据库seata-mysql。然后创建相关表。然后创建表的脚本可通过下面的链接获取。</p><p><a href="https://github.com/seata/seata/blob/1.5.0/script/server/db/mysql.sql" target="_blank" rel="noreferrer">Seata建表脚本链接：https://github.com/seata/seata/blob/1.5.0/script/server/db/mysql.sql</a></p><p>具体的建表脚本。要注意版本，后续版本可能会变。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- -------------------------------- The script used when storeMode is &#39;db&#39; --------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- the table to store GlobalSession data</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `global_table`</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `xid`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                       VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `transaction_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `status`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    TINYINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `application_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `transaction_service_group`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `transaction_name`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `timeout`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `begin_time`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `application_data`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `gmt_create`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                DATETIME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `gmt_modified`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              DATETIME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`xid`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `idx_status_gmt_modified`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`status`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`gmt_modified`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `idx_transaction_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`transaction_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InnoDB</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utf8mb4;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- the table to store BranchSession data</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `branch_table`</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `branch_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `xid`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">               VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `transaction_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `resource_group_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `resource_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `branch_type`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `status`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            TINYINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `client_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `application_data`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `gmt_create`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        DATETIME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `gmt_modified`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      DATETIME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`branch_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `idx_xid`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`xid`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InnoDB</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utf8mb4;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- the table to store lock data</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `lock_table`</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `row_key`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `xid`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `transaction_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `branch_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `resource_id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `table_name`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `pk`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">             VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `status`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         TINYINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      NOT NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0:locked ,1:rollbacking&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `gmt_create`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     DATETIME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `gmt_modified`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   DATETIME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`row_key`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `idx_status`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`status`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `idx_branch_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`branch_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `idx_xid_and_branch_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`xid`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`branch_id`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InnoDB</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utf8mb4;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `distributed_lock`</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `lock_key`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `lock_value`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    `expire`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`lock_key`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InnoDB</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utf8mb4;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `distributed_lock`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lock_key, lock_value, expire) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AsyncCommitting&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `distributed_lock`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lock_key, lock_value, expire) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RetryCommitting&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `distributed_lock`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lock_key, lock_value, expire) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RetryRollbacking&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `distributed_lock`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lock_key, lock_value, expire) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TxTimeoutCheck&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="配置seata服务端连接到nacos注册中心" tabindex="-1">配置Seata服务端连接到nacos注册中心 <a class="header-anchor" href="#配置seata服务端连接到nacos注册中心" aria-label="Permalink to &quot;配置Seata服务端连接到nacos注册中心&quot;">​</a></h4><ol><li>从application.example.yml中复制注册中心连接信息到application.yml中。</li><li>编辑registry.type属性和registry.nacos属性。</li></ol><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 设置registry.type属性为nacos</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    preferred-networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">30.240.*</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nacos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">seata-server</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     ### seata服务名称</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      server-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:7070</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   ### nacos注册中心地址</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SEATA_GROUP</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      cluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              ### nacos注册中心默认为集群模式</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               ### nacos账户</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               ### nacos密码</span></span></code></pre></div><p>如图所示，成功把Seata服务端注册到Nacos中 <img src="'+A+`" alt="seata20220823171307.png"></p><h4 id="配置seata服务端连接nacos配置中心" tabindex="-1">配置Seata服务端连接nacos配置中心 <a class="header-anchor" href="#配置seata服务端连接nacos配置中心" aria-label="Permalink to &quot;配置Seata服务端连接nacos配置中心&quot;">​</a></h4><ol><li>从application.example.yml中复制配置中心连接信息到application.yml中。</li><li>编辑config.type属性和config.nacos属性。</li></ol><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 设置config.type属性为nacos配置中心</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nacos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      server-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:7070</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       ### 配置中心地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SEATA_GROUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   ### nacos账户</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   ### nacos密码</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      data-id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">seataServer.properties</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   ### 配置文件的名称</span></span></code></pre></div><ol start="3"><li>在nacos配置中心中创建对应的配置文件。可以把seata的持久化模式等相关配置放在nacos配置中心中编辑，然后由seata来读取。</li></ol><p><img src="`+C+'" alt="seata20220823172222.png"><img src="'+b+`" alt="seata20220823173928.png"></p><h4 id="解决seata服务端启动seata-server-bat闪退" tabindex="-1">解决Seata服务端启动seata-server.bat闪退 <a class="header-anchor" href="#解决seata服务端启动seata-server-bat闪退" aria-label="Permalink to &quot;解决Seata服务端启动seata-server.bat闪退&quot;">​</a></h4><p>运行/bin/seata-server.bat,启动Seata服务端。如果Seata服务端启动失败后，windows命令窗口会闪退，导致无法看到失败原因。</p><p>解决方式：编辑seata-server.bat</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmd</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 在最后一行前加上这段代码，防止闪退。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /B</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %ERROR_CODE%</span></span></code></pre></div><h2 id="springcloudalibaba-集成-seata客户端" tabindex="-1">SpringCloudAlibaba 集成 Seata客户端 <a class="header-anchor" href="#springcloudalibaba-集成-seata客户端" aria-label="Permalink to &quot;SpringCloudAlibaba 集成 Seata客户端&quot;">​</a></h2><p>Seata客户端一般是集成到微服务中的某个具体的服务。</p><p>① 导入Seata客户端依赖</p><p>不用写具体的Seata版本号，具体的Seata版本号由父pom中的SpringCloudAlibaba依赖来决定。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;com.alibaba.cloud&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;spring-cloud-starter-alibaba-seata&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>② 在服务的application.yaml配置文件中添加配置</p><p>还需要在Seat客户端中再次配置Seata服务端的信息。从而让Seat客户端找到Seat服务端。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # seata服务端的nacos注册中心信息。参考seata服务端的配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nacos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      server-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:8848</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # namespace默认为public</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # seata服务端在nacos注册中心的应用名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">seata-server</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SEATA_GROUP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # seata服务端的nacos配置中心信息。参考seata服务端的配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nacos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      server-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:8848</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SEATA_GROUP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # seata服务端的事务组 </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tx-service-group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default_tx_group</span></span></code></pre></div><h2 id="seata的4种模式-xa-at-tcc-saga" tabindex="-1">Seata的4种模式（XA，AT，TCC，Saga） <a class="header-anchor" href="#seata的4种模式-xa-at-tcc-saga" aria-label="Permalink to &quot;Seata的4种模式（XA，AT，TCC，Saga）&quot;">​</a></h2><p>Seata提供了四种模式来解决分布式事务</p><ul><li>AT模式：Seata的默认模式。是最终一致性的分阶段事务模式，无业务侵入。</li><li>XA模式：强一致性分阶段事务模式，弱可用性，无业务侵入。</li><li>TCC模式：最终一致性的分阶段事务模式，有业务侵入。</li><li>SAGA模式：长事务模式，有业务侵入。</li></ul><p>其中AT模式是Seata的默认模式，也是阿里巴巴推荐的模式。</p><p>实际上，这四种模式都是2PC协议的不同实现方式，每种模式都有自己的侧重点。</p><h3 id="xa模式" tabindex="-1">XA模式 <a class="header-anchor" href="#xa模式" aria-label="Permalink to &quot;XA模式&quot;">​</a></h3><p>XA模式是2PC协议的一种实现方式，下图是XA模式的流程图。</p><p><img src="`+D+`" alt="seata_20231214192538.png"></p><p>阶段1：</p><ol><li>事务管理器TM 向事务协调者TC 注册一个全局事务。</li><li>TM向TC注册一个分支事务。一个分支事务代表一个微服务。</li><li>然后各个分支事务（服务）执行各自的业务操作。并将事务操作结果报告给TC。</li></ol><p>阶段2：</p><ol><li>TC检查各个分支事务的事务操作结果。</li><li>如果所有分支事务都成功完成事务操作，那么TC发送提交请求给所有分支事务。否则TC发送回滚请求给所有分支事务。</li><li>各个分支事务接收TC发送的请求，来执行事务的提交/回滚操作。</li></ol><blockquote><p>XA模式的优点</p></blockquote><p>优点：满足ACID特性。实现简单，没有侵入性。</p><blockquote><p>XA模式的缺点</p></blockquote><p>阶段1的分支事务会锁定数据库资源。只有等到阶段2分支事务才会释放资源。如果阶段1的完成时间较长，那么会导致数据库资源的长期占用。即XA模式下分布式事务的耗时长，性能差。</p><p>另外XA模式本质上使用数据库的事务机制来完成的。如果数据库不支持事务，那么XA模式就无法实现。</p><h4 id="seata使用xa模式" tabindex="-1">Seata使用XA模式 <a class="header-anchor" href="#seata使用xa模式" aria-label="Permalink to &quot;Seata使用XA模式&quot;">​</a></h4><p>① 在服务的配置文件中添加配置</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启seata的XA模式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  data-source-proxy-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">XA</span></span></code></pre></div><p>② 给分布式事务的入口方法添加@GlobalTransactional注解即可。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//buy方法就是分布式事务的入口方法。该方法需要调用多个服务，多个数据库。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GlobalTransactional</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> buy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //调用订单服务，创建订单</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  orderService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //调用支付服务，进行支付</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  payService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toPay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //调用库存服务，扣减库存</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="at模式" tabindex="-1">AT模式 <a class="header-anchor" href="#at模式" aria-label="Permalink to &quot;AT模式&quot;">​</a></h3><p>AT模式是2PC协议的一种实现方式。不过AT模式解决了XA模式中事务资源锁定时间长的问题。</p><p>AT模式的流程图如下。 <img src="`+u+'" alt="seata_20231214205817.png"></p><p>阶段1：</p><ol><li>事务管理器TM 向事务协调者TC 注册一个全局事务。</li><li>TM向TC注册一个分支事务。一个分支事务代表一个微服务。</li><li>各个分支事务执行业务操作并提交事务，然后记录业务操作前后的信息，生成快照。</li><li>分支事务向TC发送执行结果。</li></ol><p>阶段2：</p><ol><li>TC检查各个分支事务的事务操作结果。</li><li>如果所有分支事务都成功完成事务操作，那么TC发送提交请求给所有分支事务。否则TC发送回滚请求给所有分支事务。</li><li>各个分支事务接收TC发送的请求。如果是提交请求，那么分支事务直接删除快照。如果是回滚请求，分支事务根据快照恢复数据。</li></ol><h4 id="at模式中的读写隔离问题" tabindex="-1">AT模式中的读写隔离问题 <a class="header-anchor" href="#at模式中的读写隔离问题" aria-label="Permalink to &quot;AT模式中的读写隔离问题&quot;">​</a></h4><blockquote><p>什么是AT模式中的读写隔离问题？</p></blockquote><p>例如有一个分布式事务，里面包含事务A,B,C。有一个数据库记录R1。</p><p>在AT模式的阶段1和阶段2的中间过程中，如果有一个分布式事务之外的事务D。也修改了数据库记录R1，并提交了事务D。</p><p>那么当分布式事务在阶段2的时候进行了回滚，这样会导致事务D的修改无效。即事务D产生了脏写问题。</p><blockquote><p>解决方式</p></blockquote><p>通过全局锁机制+前后快照机制</p><p>全局锁是指：TC来记录分布式事务的执行过程中，分支事务修改了那条数据记录。然后将分支事务与数据库记录绑定。让这条数据库记录只能被某个分支事务修改。</p><p>前后快照机制是指：事务在提交的时候，将修改前的数据保存为before-image。将修改后的数据保存为after-image。</p><p>当阶段2需要回滚的时候，通过将现有数据记录与after-image进行对比，若一致，说明这条数据没有被其他事务修改。那么阶段2就可以回滚了。如果不一致，说明有其他事务修改了这条数据记录。那么此时需要人工干预。</p><p><img src="'+m+'" alt="seata_20231214212737.png"></p><h4 id="at模式的阶段1详细过程" tabindex="-1">AT模式的阶段1详细过程 <a class="header-anchor" href="#at模式的阶段1详细过程" aria-label="Permalink to &quot;AT模式的阶段1详细过程&quot;">​</a></h4><p>AT模式的阶段1：</p><ol><li>Seata首先会拦截业务SQL</li><li>在业务数据被更新前，将其保存成before-image（before快照）</li><li>执行业务SQL,更新业务数据</li><li>在业务数据更新之后，将其保存成after-image（after快照）</li><li>然后对这条业务数据记录，加上行锁。</li><li>以上操作全部在一个数据库事务内完成，这样保证了阶段1的原子性。</li></ol><p><img src="'+_+'" alt="seata20220822224203.png"></p><h4 id="at模式的阶段2详细过程" tabindex="-1">AT模式的阶段2详细过程 <a class="header-anchor" href="#at模式的阶段2详细过程" aria-label="Permalink to &quot;AT模式的阶段2详细过程&quot;">​</a></h4><p>AT模式的阶段2：（正常情况下）</p><ol><li>由于事务在阶段1就已经提交了。</li><li>因此阶段2，只是将before-image和after-image和行锁删除即可。</li></ol><p><img src="'+B+'" alt="seata20220822224609.png"></p><p>AT模式的阶段2：（回滚情况下）</p><ol><li>由于事务在阶段1就已经提交了。如果阶段2要回滚。</li><li>首先要校验脏写情况，对比当前业务数据和after-image。 <ol><li>如果一致就说明没有脏写，可以通过before-image来回滚到之前的业务数据。</li><li>如果不一致就说明有脏写，出现脏写就需要通过人工处理。</li></ol></li><li>回滚完成后，最后把before-image和after-image和行锁删除即可。</li></ol><p><img src="'+T+`" alt="seata20220822224701.png"></p><h4 id="at模式和xa模式的区别" tabindex="-1">AT模式和XA模式的区别 <a class="header-anchor" href="#at模式和xa模式的区别" aria-label="Permalink to &quot;AT模式和XA模式的区别&quot;">​</a></h4><ol><li>XA模式阶段1不提交事务，会一直锁定资源。AT模式阶段1提交事务，事务提交后释放资源。</li><li>XA模式的实现依赖数据库的事务来实现回滚。AT模式通过快照来实现数据回滚。</li><li>XA模式是强一致性。AT模式是最终一致性。</li></ol><h4 id="seata使用at模式" tabindex="-1">Seata使用AT模式 <a class="header-anchor" href="#seata使用at模式" aria-label="Permalink to &quot;Seata使用AT模式&quot;">​</a></h4><p>如果要使用Seata的AT模式，要满足以下条件:</p><ol><li>Seata的服务端的存储模式要设置为db。参考上面的文章内容来设置。</li><li>Seata的客户端（服务）中要新增一张undo_log表。即涉及到分布式事务的服务都需要关联undo_log表。</li></ol><p>undo_log表的建表脚本如下。要注意版本，后续版本可能会变。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> undo_log</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	branch_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bigint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;branch transaction id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	xid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;global transaction id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;undo_log context,such as serialization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	rollback_info longblob </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rollback info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	log_status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0:normal status,1:defense status&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	log_created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">datetime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;create datetime&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	log_modified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">datetime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;modify datetime&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ux_undo_log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		unique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (xid, branch_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AT transaction mode undo table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> charset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8;</span></span></code></pre></div><ol start="3"><li>修改Seata的客户端的配置文件。</li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启seata的AT模式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  data-source-proxy-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">AT</span></span></code></pre></div><ol start="4"><li>给分布式事务的入口方法添加@GlobalTransactional注解即可。</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//buy方法就是分布式事务的入口方法。该方法需要调用多个服务，多个数据库。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GlobalTransactional</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> buy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //调用订单服务，创建订单</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  orderService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //调用支付服务，进行支付</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  payService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toPay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //调用库存服务，扣减库存</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="tcc模式-try、confirm-和-cancel" tabindex="-1">TCC模式(Try、Confirm 和 Cancel) <a class="header-anchor" href="#tcc模式-try、confirm-和-cancel" aria-label="Permalink to &quot;TCC模式(Try、Confirm 和 Cancel)&quot;">​</a></h3><p>TCC模式需要用户根据自己的业务场景实现 Try、Confirm 和 Cancel 三个方法。</p><ul><li>Try：用来进行资源的检测和预留；</li><li>Confirm：执行的业务操作提交；</li><li>Cancel：预留资源释放；</li></ul><p>分支事务在一阶段执行 Try 方法。在二阶段提交执行 Confirm 方法。如果一阶段错误，那么二阶段回滚执行 Cancel 方法。</p><p><img src="`+S+'" alt="seata_20231214222438.png"></p><blockquote><p>TCC的优点</p></blockquote><ol><li>阶段1就提交了事务。不占用数据库资源，性能好。</li><li>相比AT模型，没有生成快照，全局锁，性能好。</li><li>不依赖数据库的事务机制。可以适用非关系型数据库。</li></ol><blockquote><p>TCC的缺点</p></blockquote><ol><li>有代码侵入，需要额外编写Try、Confirm 和 Cancel 三个方法。</li></ol><h4 id="tcc模式中的空回滚和业务悬挂问题" tabindex="-1">TCC模式中的空回滚和业务悬挂问题 <a class="header-anchor" href="#tcc模式中的空回滚和业务悬挂问题" aria-label="Permalink to &quot;TCC模式中的空回滚和业务悬挂问题&quot;">​</a></h4><blockquote><p>空回滚</p></blockquote><p>空回滚是指：当某个分支事务A阻塞的时候。可能导致这个分支事务A超时，从而触发整个分布式事务的回滚。</p><p>由于分支事务A超时，其并没有执行业务逻辑操作。如果分支事务A执行了回滚操作，那么这个回滚操作就是空回滚。</p><p><img src="'+q+'" alt="seata_20231214224909.png"></p><p>总结：空回滚是指某个分支事务没有执行try方法的情况下，执行了cancel方法。</p><blockquote><p>业务悬挂</p></blockquote><p>当分布式事务结束的情况下。对于进入阻塞状态的分支事务，突然不阻塞了，又开始执行try方法。由于分布式事务已经结束，并且又执行了一次try方法。那么这种情况下就是业务悬挂。</p><p>因此应当避免分支事务在空回滚后的try操作。避免这个分支事务产生业务悬挂。</p><h3 id="saga模式" tabindex="-1">Saga模式 <a class="header-anchor" href="#saga模式" aria-label="Permalink to &quot;Saga模式&quot;">​</a></h3><p>Saga模式是Seata提供的长分布式事务的解决方案。</p><ul><li>阶段1：直接提交事务。</li><li>阶段2：如果事务都提交成功了，则什么都不做。如果提交失败了，则通过人工编码来进行业务回滚。</li></ul><p>Saga模式的流程图 <img src="'+v+'" alt="seata20220822230419.png"></p><p>上图T1-T3都是正向的业务流程，都对应着一个逆向操作C1-C3。在分布式事务执行过程中，依次执行正向操作，如果所有正向操作均执行成功，那么分布式事务提交。如果任何一个正向操作执行失败，那么分布式事务会退回去执行前面参与者的逆向回滚操作，回滚已提交的参与者，使分布式事务回到初始状态。</p><blockquote><p>Saga模式的优点</p></blockquote><ol><li>阶段1就进行事务提交，无锁，高性能；</li><li>分支事务可以异步执行逆向回滚操作，高性能。</li><li>补偿服务即正向服务的“反向”，易于理解，易于实现；</li></ol><blockquote><p>Saga模式的缺点</p></blockquote><ol><li>由于阶段1就提交了事务，因此没有锁，没有事务隔离，会有脏写问题。</li></ol><h3 id="_4种模式的对比" tabindex="-1">4种模式的对比 <a class="header-anchor" href="#_4种模式的对比" aria-label="Permalink to &quot;4种模式的对比&quot;">​</a></h3><p><img src="'+f+'" alt="seata_20231214233424.png"></p>',186)]))}const U=a(x,[["render",R]]);export{M as __pageData,U as default};
