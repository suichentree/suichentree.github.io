import{_ as o,c as a,o as p,ak as i}from"./chunks/framework.CmzJUe0_.js";const d=JSON.parse('{"title":"bootstrap和application配置文件","description":"","frontmatter":{"title":"bootstrap和application配置文件","date":"2023-11-15T00:00:00.000Z","sidebar":"auto","categories":["开发"],"tags":["开发"]},"headers":[],"relativePath":"blogs/开发/bootstrap和application配置文件.md","filePath":"blogs/开发/bootstrap和application配置文件.md"}'),l={name:"blogs/开发/bootstrap和application配置文件.md"};function r(s,t,e,n,c,_){return p(),a("div",null,t[0]||(t[0]=[i('<p>[toc]</p><h1 id="bootstrap和application配置文件" tabindex="-1">bootstrap和application配置文件 <a class="header-anchor" href="#bootstrap和application配置文件" aria-label="Permalink to &quot;bootstrap和application配置文件&quot;">​</a></h1><p>SpringBoot中有以下两种配置文件，bootstrap (.yml 或者 .properties)，application (.yml 或者 .properties)</p><ol><li>加载顺序的区别</li></ol><ul><li>bootstrap.yml（bootstrap.properties）先加载，并且不能被本地配置重写。</li><li>application.yml（application.properties）后加载</li></ul><ol start="2"><li>应用场景的区别</li></ol><ul><li>bootstrap配置文件和application配置文件都可以用来配置参数。</li><li>bootstrap配置文件用来定义系统级别的配置，这些参数一般是不会变动的。</li><li>application 配置文件用来定义应用级别的，主要是项目的本地配置。</li></ul><p>例如在微服务项目中，每个服务项目的bootstrap配置文件主要配置使用到的注册中心，配置中心，流量控制中心，消息中心等系统级别的配置信息。</p><ol start="3"><li>为什么需要bootstrap配置文件</li></ol><p>？？？</p>',10)]))}const m=o(l,[["render",r]]);export{d as __pageData,m as default};
