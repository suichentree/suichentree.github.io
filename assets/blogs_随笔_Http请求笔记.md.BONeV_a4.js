import{_ as a,c as t,o as i,ak as n}from"./chunks/framework.CmzJUe0_.js";const u=JSON.parse('{"title":"Http请求笔记","description":"","frontmatter":{"title":"Http请求笔记","date":"2024-03-30T00:00:00.000Z","sidebar":"auto","categories":["随笔"]},"headers":[],"relativePath":"blogs/随笔/Http请求笔记.md","filePath":"blogs/随笔/Http请求笔记.md"}'),p={name:"blogs/随笔/Http请求笔记.md"};function l(e,s,o,h,k,r){return i(),t("div",null,s[0]||(s[0]=[n(`<p>[toc]</p><h1 id="http请求笔记" tabindex="-1">Http请求笔记 <a class="header-anchor" href="#http请求笔记" aria-label="Permalink to &quot;Http请求笔记&quot;">​</a></h1><p>GET请求没有请求体。因此GET请求的请求参数是在请求路径上的。可以在浏览器的地址栏上看到GET请求的请求参数。是以键值对字符串的格式展示。</p><p>POST请求有请求体。因此POST请求的请求参数是可以放到请求路径或者请求体中的。</p><p>另外，如果是表单数据和JSON数据，那么这两种数据都是存放在请求体中的。</p><h2 id="content-type" tabindex="-1">content-type <a class="header-anchor" href="#content-type" aria-label="Permalink to &quot;content-type&quot;">​</a></h2><blockquote><p>什么是Content-Type？</p></blockquote><p>Content-Type是HTTP协议中的一个请求字段，用于指示请求或响应中传输数据的类型。</p><blockquote><p>为什么使用Content-Type？</p></blockquote><p>在Http请求中，通过设置Content-Type，发送方可以告知接受方如何解析和处理返回的数据，而接受方可以根据Content-Type来选择合适的方式来处理接收到的数据。</p><blockquote><p>如果没有Content-Type的话，会引发什么问题？</p></blockquote><p>如果请求或响应中没有正确设置Content-Type，可能会引发以下问题:</p><ul><li>数据解析错误：接收方无法准确地解析数据，因为没有明确指定数据的格式。</li><li>乱码问题：如果没有指定数据的字符集编码格式，接收方可能无法正确地解码数据，导致数据显示为乱码。</li><li>安全问题：Content-Type还可以用于安全机制，如防止跨站脚本攻击（XSS）。</li></ul><blockquote><p>Content-Type的常见类型有哪些？</p></blockquote><p>常见的Content-Type类型包括</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用数据格式类型</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/x-www-form-urlencoded&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 表单默认格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                      // JSON数据格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/octet-stream&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // 二进制流格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/xml&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                       // XML格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/pdf&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                       // PDF格式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//表单文件上传格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;multipart/form-data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//图片格式类型</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/bmp&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             // BMP图片格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/gif&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             // GIF图片格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/jpeg&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                            // JPEG图片格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                             // PND图片格式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//音频视频格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;audio/mp3&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//文件格式类型</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/html&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                         // HTML格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/plain&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                        // 纯文本格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/xml&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                          // XML格式</span></span></code></pre></div><p>① &quot;application/x-www-form-urlencoded&quot; 格式</p><p>这个格式就是form表单数据格式。当请求方向接收方发送form表单数据的时候，Content-Type类型设置为&quot;application/x-www-form-urlencoded&quot; 格式即可。</p><p>② &quot;application/json&quot; 格式</p><p>这个格式就是json数据格式。当请求方向接收方发送json数据的时候，Content-Type类型设置为&quot;application/json&quot; 格式即可。</p><p>③ &quot;multipart/form-data&quot; 格式</p><p>当请求方向接收方发送文件的二进制数据的时候，Content-Type类型设置为&quot;multipart/form-data&quot; 格式即可。</p>`,22)]))}const d=a(p,[["render",l]]);export{u as __pageData,d as default};
