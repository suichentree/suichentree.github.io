import{_ as i,c as a,o as l,ak as n}from"./chunks/framework.CmzJUe0_.js";const h="/assets/python_20240517174100.BX9Z_cSh.png",o=JSON.parse('{"title":"Python使用Loguru日志库笔记","description":"","frontmatter":{"title":"Python使用Loguru日志库笔记","date":"2024-05-18T00:00:00.000Z","sidebar":"auto","categories":["Python"],"tags":["Python"]},"headers":[],"relativePath":"blogs/Python/Python使用Loguru日志库笔记.md","filePath":"blogs/Python/Python使用Loguru日志库笔记.md"}'),t={name:"blogs/Python/Python使用Loguru日志库笔记.md"};function k(p,s,e,r,g,E){return l(),a("div",null,s[0]||(s[0]=[n(`<p>[toc]</p><h1 id="python使用loguru日志库笔记" tabindex="-1">Python使用Loguru日志库笔记 <a class="header-anchor" href="#python使用loguru日志库笔记" aria-label="Permalink to &quot;Python使用Loguru日志库笔记&quot;">​</a></h1><p>Loguru是目前最流行的python第三方日志库。简单来说就是一个方便（且好看）的控制台+文件的日志库。</p><blockquote><p>Loguru 特点如下</p></blockquote><ol><li>可以区分不同类型的日志：正常，警告，错误，严重等。</li><li>可以配置指定的日志文件名称。</li><li>可以配置指定的日志输出格式。</li><li>可以把不同的日志类型写到不同的文件中。</li><li>可以配置按照时间，文件大小等条件对日志文件进行滚动分割。</li><li>支持异步写日志。</li><li>支持线程安全和进程安全写入日志。</li><li>可以方便的记录，支持python的string format格式。</li></ol><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>Loguru 仅支持 Python 3.5 及以上的版本，使用 pip 安装即可。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loguru</span></span></code></pre></div><h2 id="默认使用" tabindex="-1">默认使用 <a class="header-anchor" href="#默认使用" aria-label="Permalink to &quot;默认使用&quot;">​</a></h2><p>Loguru 的主要使用对象只有一个：logger</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入loguru模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印各种级别的日志消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log info!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.warning(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log warn!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.error(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log error!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.debug(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log debug!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>控制台输入如下 <img src="`+h+`" alt="python_20240517174100.png"></p><p>Loguru 会提前配置一些基础信息，自动输出时间、日志级别、模块名、行号等信息，而且根据等级的不同，还自动设置了不同的颜色，方便观察，真正做到了开箱即用。</p><h2 id="日志级别" tabindex="-1">日志级别 <a class="header-anchor" href="#日志级别" aria-label="Permalink to &quot;日志级别&quot;">​</a></h2><p>Loguru提供了七层日志层级，或者说七种日志类型。</p><p>每种类型的日志有一个整数值，表示日志层级。从小到大的日志级别排序如下</p><ul><li>TRACE (5): 用于记录程序执行路径的细节信息，以进行诊断。</li><li>DEBUG (10): 开发人员使用该工具记录调试信息。</li><li>INFO (20): 用于记录描述程序正常操作的信息消息。</li><li>SUCCESS (25): 类似于INFO，用于指示操作成功的情况。</li><li>WARNING (30): 警告类型，用于指示可能需要进一步调查的不寻常事件。</li><li>ERROR (40): 错误类型，用于记录影响特定操作的错误条件。</li><li>CRITICAL (50): 严重类型，用于记录阻止核心功能正常工作的错误条件</li></ul><p>另外Loguru默认使用DEBUG作为其最低日志级别，因此任何严重性低于DEBUG的日志信息都会被忽略。</p><p>意思就是说只有 大于等于 DEBUG 级别的日志消息才会输出。小于 DEBUG 级别的日志消息不会输出。</p><h2 id="自定义日志配置-add-函数" tabindex="-1">自定义日志配置 add() 函数 <a class="header-anchor" href="#自定义日志配置-add-函数" aria-label="Permalink to &quot;自定义日志配置 add() 函数&quot;">​</a></h2><p>除了Loguru提供的默认日志配置之外，我们还可以自定义日志配置。</p><p>通过 add() 函数，可以轻松定制 Loguru 的内部配置，该函数可处理从日志格式化到日志文件设置等一切配置操作。</p><p>下面是add()方法的完整参数：</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(sink, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DEBUG&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;green&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YYYY-MM-DD HH:mm:ss.SSS}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/green&gt; | &lt;level&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &lt;8}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/level&gt; | &lt;cyan&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{name}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/cyan&gt;:&lt;cyan&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{function}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/cyan&gt;:&lt;cyan&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{line}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/cyan&gt; - &lt;level&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{message}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/level&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">colorize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">serialize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">backtrace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">diagnose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">enqueue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">catch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kwargs)</span></span></code></pre></div><p>基本参数</p><ul><li>sink：默认情况下，它设置为 sys.stderr。 它可以是一个file对象，也可以是一个文件路径，也可以是一个方法名称。 <ul><li>当sink是一个file对象的时候，日志信息会传输给该文件对象。</li><li>当sink是一个文件路径的时候，loguru会根据这个文件路径，创建一个日志文件，然后将日志信息写入到日志文件中。</li><li>当sink是一个方法的时候，日志信息会传递给方法参数。从而可以在方法中自定义日志输出方式。</li></ul></li><li>level：最低日志级别。</li><li>format：日志格式模板。</li><li>filter：一个可选的指令，用于确定一条记录是否应该被记录。</li><li>colorize: 采用布尔值并确定是否应启用终端是否显示颜色。</li><li>serialize：如果设置为 True，则日志记录以 JSON 格式呈现。</li><li>backtrace：显示生成错误的完整堆栈跟踪，以便于调试。</li><li>diagnose：确定变量值是否应在异常跟踪中显示。在生产环境中应将其设置为 False，以避免泄露敏感信息。</li><li>enqueue：启用此选项会将日志记录放入队列中，以避免多个进程记录到同一目的地时发生冲突。</li><li>catch：如果在记录到指定的接收器时发生意外错误，您可以通过将此选项设置为 True 来捕获该错误。错误将打印到标准错误。</li><li>**kwargs：更多的附加参数（见下文）。</li></ul><p>当且仅当 sink 是文件路径时，可以有以下附加参数：</p><ul><li>rotation：一种条件，指示何时关闭当前日志文件并开始使用新的日志文件。 <ul><li>如果是整数，表示日志文件保留的最大字节数，如果超过则重新创建新的日志文件。</li><li>如果是时间字符串，则表示当达到该时间的时候，重新创建新的日志文件。</li></ul></li><li>retention：日志文件保留条件。</li><li>compression：日志文件在关闭时应转换为的压缩或存档格式。</li><li>delay：是在配置 sink 后立即创建文件，还是延迟到第一条记录的消息时再创建。默认为 False。</li><li>mode：内置 open() 函数的打开模式，默认为 a（以追加模式打开文件）。</li><li>buffering：内置 open() 函数的缓冲策略，默认为1（行缓冲文件）。</li><li>encoding：内置 open() 函数的文件编码，如果 None，则默认为 <code>locale.getpreferredencoding()</code>。</li><li>\\kwargs：其他传递给内置 open() 函数的参数。</li></ul><p>当且仅当 sink 是函数时，可以有以下附加参数：</p><ul><li>loop：将在其中调度和执行异步日志记录任务的事件循环。如果为 None，将使用 asyncio.get_event_loop() 返回的循环。</li></ul><h2 id="自定义日志默认级别" tabindex="-1">自定义日志默认级别 <a class="header-anchor" href="#自定义日志默认级别" aria-label="Permalink to &quot;自定义日志默认级别&quot;">​</a></h2><p>自定义日志默认级别为INFO</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先去除Loguru提供的默认日志配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.remove(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置默认日志级别为INFO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>remove()方法被首先调用，以删除默认配置（其ID为0）。</li></ul><h2 id="自定义日志文件" tabindex="-1">自定义日志文件 <a class="header-anchor" href="#自定义日志文件" aria-label="Permalink to &quot;自定义日志文件&quot;">​</a></h2><p>自定义日志文件配置，从而将日志保存到文件上。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入loguru模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置日志文件为test01.log</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test01.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印各种级别的日志消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log info!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.warning(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log warn!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.error(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log error!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.debug(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is log debug!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>程序运行结束后，不光会在控制台上输出日志信息。同时也会在当前目录中创建一个test01.log日志文件，并把日志信息输出到日志文件中。</p><blockquote><p>将不同类型的日志记录到不同的文件中</p></blockquote><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置不同级别的日志输出文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./logs/debug.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10 MB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> record: record[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./logs/info.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10 MB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> record: record[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./logs/warning.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;WARNING&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10 MB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> record: record[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;WARNING&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./logs/error.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ERROR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10 MB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> record: record[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ERROR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./logs/critical.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CRITICAL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10 MB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> record: record[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CRITICAL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出不同级别的日志消息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.debug(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a debug message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is an info message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.warning(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a warning message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.error(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is an error message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.critical(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a critical message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="format-日志格式模板" tabindex="-1">format 日志格式模板 <a class="header-anchor" href="#format-日志格式模板" aria-label="Permalink to &quot;format 日志格式模板&quot;">​</a></h3><p>在日常使用中，如果默认的输出内容不够，我们还可以自定义日志的输出内容和格式。</p><p>可以通过add()方法中的格式选项对Loguru生成的日志记录进行重新格式化。</p><p>注意：当我们自定义日志格式的时候，我们需要先移除默认的日志格式，然后再添加自定义的日志格式。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除默认配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.remove(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义的日志输出格式 。 里面添加了process和thread记录，方便查看多进程和线程的信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log_format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;green&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YYYY-MM-DD HH:mm:ss.SSS}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/green&gt; | &lt;level&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{level}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/level&gt; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;| &lt;magenta&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{process}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/magenta&gt;:&lt;yellow&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{thread}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/yellow&gt; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;| &lt;cyan&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{name}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/cyan&gt;:&lt;cyan&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{function}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/cyan&gt;:&lt;yellow&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{line}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/yellow&gt; - &lt;level&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{message}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;/level&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加自定义的控制台日志输出格式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(sys.stdout,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">colorize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log_format)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置不同级别日志文件中的自定义日志格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分别是info级别的日志文件，和 waring级别的日志文件。并且每天7点进行日志文件分割</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./log/run_info_log_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YYYY-MM-DD}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log_format,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;07:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./log/run_warning_log_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YYYY-MM-DD}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log_format,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;WARNING&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;07:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>{time:YYYY-MM-DD HH:mm:ss.SSS}：时间戳</li><li>{level}：日志级别</li><li>{message}：日志消息</li><li>{process} {thread} ： 进程信息 和 线程信息</li><li>{line} 日志在代码中的行号信息</li></ul><h3 id="rotation-日志文件分割" tabindex="-1">rotation 日志文件分割 <a class="header-anchor" href="#rotation-日志文件分割" aria-label="Permalink to &quot;rotation 日志文件分割&quot;">​</a></h3><p>add() 函数的 rotation 参数，可以根据不同的方式来进行日志文件分割。</p><blockquote><p>按时间分割日志文件</p></blockquote><p>按照固定时间创建新的日志文件，比如设置每天 0 点新创建一个 log 文件。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入loguru模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 rotation 参数 每天0点进行日志分割</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;00:00&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><blockquote><p>按大小分割日志文件</p></blockquote><p>设置超过 500 MB 新创建一个 log 文件</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;500 MB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><blockquote><p>按日期分割日子文件</p></blockquote><p>设置每隔一个周新创建一个 log 文件</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1 week&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="retention-日志文件保留" tabindex="-1">retention 日志文件保留 <a class="header-anchor" href="#retention-日志文件保留" aria-label="Permalink to &quot;retention 日志文件保留&quot;">​</a></h3><p>add() 函数的 retention 参数，可以设置日志文件。</p><blockquote><p>设置日志文件保留时间</p></blockquote><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loguru </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置日志文件最长保留 15 天</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">retention</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;15 days&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置日志文件最长保留 5 个小时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">retention</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datetime.timedelta(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hours</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><blockquote><p>设置日志文件保留个数</p></blockquote><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置日志文件最多保留 10 个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">retention</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="compression-日志压缩格式" tabindex="-1">compression 日志压缩格式 <a class="header-anchor" href="#compression-日志压缩格式" aria-label="Permalink to &quot;compression 日志压缩格式&quot;">​</a></h3><p>add() 函数的 compression 参数，可以配置日志文件的压缩格式。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置使用 zip 文件格式保存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;runtime_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{time}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">compression</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>另外还支持的格式有：gz、bz2、xz、lzma、tar、tar.gz、tar.bz2、tar.xz</p>`,67)]))}const F=i(t,[["render",k]]);export{o as __pageData,F as default};
