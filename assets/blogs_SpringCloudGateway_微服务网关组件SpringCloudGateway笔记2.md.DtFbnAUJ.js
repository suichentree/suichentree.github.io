import{_ as e,c as t,o as r,ak as i}from"./chunks/framework.CmzJUe0_.js";const l="/assets/gateway20220824160642.CuWZ8zFY.png",c=JSON.parse('{"title":"微服务网关组件SpringCloudGateway笔记2","description":"","frontmatter":{"title":"微服务网关组件SpringCloudGateway笔记2","date":"2023-12-19T00:00:00.000Z","sidebar":"auto","categories":["后端"],"tags":["SpringCloudGateway"]},"headers":[],"relativePath":"blogs/SpringCloudGateway/微服务网关组件SpringCloudGateway笔记2.md","filePath":"blogs/SpringCloudGateway/微服务网关组件SpringCloudGateway笔记2.md"}'),o={name:"blogs/SpringCloudGateway/微服务网关组件SpringCloudGateway笔记2.md"};function n(p,a,d,s,g,_){return r(),t("div",null,a[0]||(a[0]=[i('<p>[toc]</p><h1 id="微服务网关组件springcloudgateway笔记2" tabindex="-1">微服务网关组件SpringCloudGateway笔记2 <a class="header-anchor" href="#微服务网关组件springcloudgateway笔记2" aria-label="Permalink to &quot;微服务网关组件SpringCloudGateway笔记2&quot;">​</a></h1><h2 id="spring-cloud-gateway-的工作原理" tabindex="-1">Spring Cloud Gateway 的工作原理 <a class="header-anchor" href="#spring-cloud-gateway-的工作原理" aria-label="Permalink to &quot;Spring Cloud Gateway 的工作原理&quot;">​</a></h2><p><img src="'+l+'" alt="gateway20220824160642.png"></p><p>执行流程大体如下：</p><ol><li>客户端向Gateway网关发送请求</li><li>请求首先会被HttpWebHandlerAdapter进行提取组装成网关上下文</li><li>然后网关的上下文会传递到DispatcherHandler，它负责将请求分发给RoutePredicateHandlerMapping</li><li>RoutePredicateHandlerMapping负责路由查找，并根据路由断言判断路由是否可用</li><li>如果断言成功，由FilteringWebHandler创建过滤器链并调用</li><li>请求会一次经过PreFilter（前过滤）--微服务处理--PostFilter（后过滤）的流程，最终返回响应结果。</li></ol><p><span style="color:red;">当用户发出请求达到 GateWay 之后，会通过一些匹配条件，定位到真正的服务节点，并且在这个转发过程前后，GateWay可以进行一些细粒度的控制，其中 Predicate（断言） 是匹配条件，Filter 是一个拦截器，有了这两点，再加上URL，就可以实现一个具体的路由。核心思想：路由转发+执行过滤器链。</span></p>',7)]))}const y=e(o,[["render",n]]);export{c as __pageData,y as default};
