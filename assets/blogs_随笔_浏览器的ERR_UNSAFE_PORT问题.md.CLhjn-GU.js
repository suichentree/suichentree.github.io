import{_ as n,c as a,o as p,ak as e}from"./chunks/framework.CmzJUe0_.js";const l="/assets/20230721111245.DEyUdHvX.png",i="/assets/20230721112638.CCLK2vpt.png",g=JSON.parse('{"title":"浏览器的ERR_UNSAFE_PORT问题","description":"","frontmatter":{"title":"浏览器的ERR_UNSAFE_PORT问题","date":"2023-01-21T00:00:00.000Z","sidebar":"auto","categories":["随笔"]},"headers":[],"relativePath":"blogs/随笔/浏览器的ERR_UNSAFE_PORT问题.md","filePath":"blogs/随笔/浏览器的ERR_UNSAFE_PORT问题.md"}'),t={name:"blogs/随笔/浏览器的ERR_UNSAFE_PORT问题.md"};function c(o,s,r,d,h,_){return p(),a("div",null,s[0]||(s[0]=[e('<p>[toc]</p><h1 id="浏览器的err-unsafe-port问题" tabindex="-1">浏览器的ERR_UNSAFE_PORT问题 <a class="header-anchor" href="#浏览器的err-unsafe-port问题" aria-label="Permalink to &quot;浏览器的ERR_UNSAFE_PORT问题&quot;">​</a></h1><p><a href="https://zhuanlan.zhihu.com/p/383077079" target="_blank" rel="noreferrer">参考链接</a></p><p>浏览器在访问某些使用特殊端口(例如10080端口)的网站时，会出现无法访问的情况，错误代码为ERR_UNSAFE_PORT。</p><p><img src="'+l+`" alt="20230721111245.png"></p><p>百度查询后发现是各家浏览器集体封杀了很多非安全端口。若访问这些端口就会出现这个错误。简而言之，这个问题和浏览器有关，和服务器没关系。</p><p>部分非安全端口</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1,    // tcpmux</span></span>
<span class="line"><span>7,    // echo</span></span>
<span class="line"><span>9,    // discard</span></span>
<span class="line"><span>11,   // systat</span></span>
<span class="line"><span>13,   // daytime</span></span>
<span class="line"><span>15,   // netstat</span></span>
<span class="line"><span>17,   // qotd</span></span>
<span class="line"><span>19,   // chargen</span></span>
<span class="line"><span>20,   // ftp data</span></span>
<span class="line"><span>21,   // ftp access</span></span>
<span class="line"><span>22,   // ssh</span></span>
<span class="line"><span>23,   // telnet</span></span>
<span class="line"><span>25,   // smtp</span></span>
<span class="line"><span>37,   // time</span></span>
<span class="line"><span>42,   // name</span></span>
<span class="line"><span>43,   // nicname</span></span>
<span class="line"><span>53,   // domain</span></span>
<span class="line"><span>77,   // priv-rjs</span></span>
<span class="line"><span>79,   // finger</span></span>
<span class="line"><span>87,   // ttylink</span></span>
<span class="line"><span>95,   // supdup</span></span>
<span class="line"><span>101,  // hostriame</span></span>
<span class="line"><span>102,  // iso-tsap</span></span>
<span class="line"><span>103,  // gppitnp</span></span>
<span class="line"><span>104,  // acr-nema</span></span>
<span class="line"><span>109,  // pop2</span></span>
<span class="line"><span>110,  // pop3</span></span>
<span class="line"><span>111,  // sunrpc</span></span>
<span class="line"><span>113,  // auth</span></span>
<span class="line"><span>115,  // sftp</span></span>
<span class="line"><span>117,  // uucp-path</span></span>
<span class="line"><span>119,  // nntp</span></span>
<span class="line"><span>123,  // NTP</span></span>
<span class="line"><span>135,  // loc-srv /epmap</span></span>
<span class="line"><span>139,  // netbios</span></span>
<span class="line"><span>143,  // imap2</span></span>
<span class="line"><span>179,  // BGP</span></span>
<span class="line"><span>389,  // ldap</span></span>
<span class="line"><span>465,  // smtp+ssl</span></span>
<span class="line"><span>512,  // print / exec</span></span>
<span class="line"><span>513,  // login</span></span>
<span class="line"><span>514,  // shell</span></span>
<span class="line"><span>515,  // printer</span></span>
<span class="line"><span>526,  // tempo</span></span>
<span class="line"><span>530,  // courier</span></span>
<span class="line"><span>531,  // chat</span></span>
<span class="line"><span>532,  // netnews</span></span>
<span class="line"><span>540,  // uucp</span></span>
<span class="line"><span>556,  // remotefs</span></span>
<span class="line"><span>563,  // nntp+ssl</span></span>
<span class="line"><span>587,  // stmp?</span></span>
<span class="line"><span>601,  // ??</span></span>
<span class="line"><span>636,  // ldap+ssl</span></span>
<span class="line"><span>993,  // ldap+ssl</span></span>
<span class="line"><span>995,  // pop3+ssl</span></span>
<span class="line"><span>2049, // nfs</span></span>
<span class="line"><span>3659, // apple-sasl / PasswordServer</span></span>
<span class="line"><span>4045, // lockd</span></span>
<span class="line"><span>6000, // X11</span></span>
<span class="line"><span>6665, // Alternate IRC</span></span>
<span class="line"><span>6666, // Alternate IRC</span></span>
<span class="line"><span>6667, // Standard IRC</span></span>
<span class="line"><span>6668, // Alternate IRC</span></span>
<span class="line"><span>6669, // Alternate IRC</span></span></code></pre></div><h2 id="解决方法" tabindex="-1">解决方法 <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法&quot;">​</a></h2><p>若想解决这个问题。首先可用更改服务器上的web服务端口，例如把10080端口改为其他安全的端口。</p><p>如果不想更改web服务的端口，那么就要更改浏览器设置了。</p><h3 id="chrome浏览器" tabindex="-1">chrome浏览器 <a class="header-anchor" href="#chrome浏览器" aria-label="Permalink to &quot;chrome浏览器&quot;">​</a></h3><p>关闭chrome浏览器-&gt;桌面找到浏览器快捷方式图标-&gt;点击右键选择属性-&gt;在【目标】后追加 空格+<code>--explicitly-allowed-ports=</code>+访问端口-&gt;点击【保存】-&gt;双击浏览器快捷方式图标，重新打开浏览器。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 空格+下面字符串+端口</span></span>
<span class="line"><span> --explicitly-allowed-ports=10080</span></span></code></pre></div><h3 id="edge浏览器" tabindex="-1">edge浏览器 <a class="header-anchor" href="#edge浏览器" aria-label="Permalink to &quot;edge浏览器&quot;">​</a></h3><p>win+R打开搜索栏，输入regedit，打开注册编辑器。进入计算机<code>\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge\\ExplicitlyAllowedNetworkPorts</code>，此路径不一定存在，可自行创建。</p><p>然后在 ExplicitlyAllowedNetworkPorts 新建一个名称为 1 的字符串值，修改其值为10080。最后重启浏览器，访问端口为10080的地址。</p><p><img src="`+i+'" alt="20230721112638.png"></p>',18)]))}const u=n(t,[["render",c]]);export{g as __pageData,u as default};
