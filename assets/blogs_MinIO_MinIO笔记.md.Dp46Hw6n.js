import{_ as s,c as a,o as n,ak as p}from"./chunks/framework.CmzJUe0_.js";const t="/assets/minio_20240317014213.BUp6dzld.png",e="/assets/minio_20240317020153.DIZSag-o.png",o="/assets/minio_20240321222829.CmYd8B2q.png",l="/assets/minio_20240317020358.-4xq-1f2.png",k="/assets/minio_20240317020721.BTNQT_eW.png",h="/assets/minio_20240317022834.CF6r8wMV.png",r="/assets/minio_20240413132758.CrzLG4Xk.png",c="/assets/minio_20240413133429.DI-QJfl7.png",d="/assets/minio_20240413133530.C1kmLTse.png",m="/assets/minio_20240413133805.D43ZqdDH.png",I=JSON.parse('{"title":"MinIO笔记","description":"","frontmatter":{"title":"MinIO笔记","date":"2024-03-17T00:00:00.000Z","sidebar":"auto","categories":["数据库"],"tags":["MinIO","对象存储"]},"headers":[],"relativePath":"blogs/MinIO/MinIO笔记.md","filePath":"blogs/MinIO/MinIO笔记.md"}'),g={name:"blogs/MinIO/MinIO笔记.md"};function F(u,i,_,b,C,y){return n(),a("div",null,i[0]||(i[0]=[p(`<p>[toc]</p><h1 id="minio笔记" tabindex="-1">MinIO笔记 <a class="header-anchor" href="#minio笔记" aria-label="Permalink to &quot;MinIO笔记&quot;">​</a></h1><p>MinIO 是一个开源的对象存储服务器，它兼容 Amazon S3 API，可用于构建私有云存储。Minio 提供高度可扩展性、易于部署和管理的特点，使其成为存储大量数据的理想选择。</p><p><a href="https://www.minio.org.cn/" target="_blank" rel="noreferrer">MinIO官网</a></p><p><a href="https://www.minio.org.cn/docs/minio/kubernetes/upstream/" target="_blank" rel="noreferrer">MinIO中文文档</a></p><blockquote><p>为什么选择MinIO？</p></blockquote><p>Minio是GO语言开发的，性能很好，安装简单，可分布式存储海量图片、音频、视频等文件，且拥有自己的管理后台界面，十分友好。</p><h2 id="docker环境下安装启动minio" tabindex="-1">Docker环境下安装启动MinIO <a class="header-anchor" href="#docker环境下安装启动minio" aria-label="Permalink to &quot;Docker环境下安装启动MinIO&quot;">​</a></h2><blockquote><p>步骤① 先安装docker环境，自行百度。</p></blockquote><blockquote><p>步骤② 下载MinIO镜像文件。最新版或某个版本</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载最新版的MinIO镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minio/minio</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载某个版本的MinIO镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minio/minio:RELEASE.2024-03-10T02-53-48Z。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre></div><blockquote><p>步骤③ 创建MinIO的容器的存储目录，即容器数据卷</p></blockquote><p>需要创建一个data目录，存储MinIO容器的配置和数据。例如在/d/DockerVolumes/minio/data</p><blockquote><p>步骤④ 创建并启动MinIO容器</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建容器并启动</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myMinIO&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 39000:9000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 39001:9001</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /d/DockerVolumes/minio/data:/data</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MINIO_ROOT_USER=minio&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MINIO_ROOT_PASSWORD=minio123&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minio/minio:RELEASE.2024-03-10T02-53-48Z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --console-address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;:9001&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询容器日志，看是否成功启动。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myMinIO</span></span></code></pre></div><blockquote><p>步骤⑤ 访问MinIO管理界面</p></blockquote><p>访问地址：<code>http://127.0.0.1:39001/login</code>。</p><p><img src="`+t+'" alt="minio_20240317014213.png"></p><h2 id="minio管理界面使用" tabindex="-1">MinIO管理界面使用 <a class="header-anchor" href="#minio管理界面使用" aria-label="Permalink to &quot;MinIO管理界面使用&quot;">​</a></h2><blockquote><p>创建用户</p></blockquote><p>创建用户并分配权限。</p><p><img src="'+e+'" alt="minio_20240317020153.png"></p><blockquote><p>创建AccessKey</p></blockquote><p>minio客户端可以通过AccessKey来访问minio服务端。</p><p><img src="'+o+'" alt="minio_20240321222829.png"></p><blockquote><p>创建组</p></blockquote><p>创建组并分配权限，并且可以把多个用户加入到同一个组内。一个组内的用户，都拥有相同的权限</p><p><img src="'+l+'" alt="minio_20240317020358.png"></p><blockquote><p>创建对象桶</p></blockquote><p><img src="'+k+'" alt="minio_20240317020721.png"></p><blockquote><p>文件上传</p></blockquote><p>创建对象桶之后，再上传文件。文件会作为对象，存储再对象桶中。</p><p><img src="'+h+'" alt="minio_20240317022834.png"></p><h2 id="本地查看minio中上传的文件" tabindex="-1">本地查看MinIO中上传的文件 <a class="header-anchor" href="#本地查看minio中上传的文件" aria-label="Permalink to &quot;本地查看MinIO中上传的文件&quot;">​</a></h2><p>当我们把文件上传到minio中时。可以通过链接来本地查看上传的文件。</p><p>链接格式：<code>http://${ip}:{port}/bucket-name/{resourceName}</code></p><p>注意：</p><ol><li>如果你的minio是docker容器部署的，那么port应该是宿主机可以访问minio容器的端口。</li><li>如果你是远程访问，那么ip是宿主机的ip。并不是你本地服务器的ip。</li><li>你需要先把对象桶的访问权限设置为public。</li></ol><p>例如下图所示的图片 <img src="'+r+'" alt="minio_20240413132758.png"></p><p>该图片的访问链接为：<code>http://localhost:39000/media-cover-bucket/1712730772556.ddd.jpg</code></p><ul><li>localhost是因为宿主机就是我本地的服务器。</li><li>39000是宿主机访问minio容器的端口。</li></ul><blockquote><p>对象桶访问权限问题</p></blockquote><p>如果你本地访问文件，minio确提示权限问题。大概率是因为没有给对象桶设置访问权限。你需要设置对象桶的权限为public才行。</p><p><img src="'+c+'" alt="minio_20240413133429.png"><img src="'+d+'" alt="minio_20240413133530.png"></p><p>设置对象桶权限为public <img src="'+m+'" alt="minio_20240413133805.png"></p>',45)]))}const O=s(g,[["render",F]]);export{I as __pageData,O as default};
