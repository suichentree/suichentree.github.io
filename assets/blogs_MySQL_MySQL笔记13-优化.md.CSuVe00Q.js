import{_ as i,a,b as l,c as n}from"./chunks/mysql_20231105175858.CbSAB7J-.js";import{_ as h,c as p,o as t,ak as k}from"./chunks/framework.CmzJUe0_.js";const e="/assets/mysql_20230825143446.Csv7Yv4g.png",r="/assets/mysql_20230825145914.Ba5AaFpl.png",d="/assets/mysql_20231021183625.B5iqP3nI.png",A=JSON.parse('{"title":"MySQL笔记13-优化","description":"","frontmatter":{"title":"MySQL笔记13-优化","date":"2023-08-25T00:00:00.000Z","sidebar":"auto","categories":["数据库"],"tags":["MySql"]},"headers":[],"relativePath":"blogs/MySQL/MySQL笔记13-优化.md","filePath":"blogs/MySQL/MySQL笔记13-优化.md"}'),g={name:"blogs/MySQL/MySQL笔记13-优化.md"};function y(F,s,E,o,c,C){return t(),p("div",null,s[0]||(s[0]=[k(`<p>[toc]</p><h1 id="mysql笔记13-优化" tabindex="-1">MySQL笔记13-优化 <a class="header-anchor" href="#mysql笔记13-优化" aria-label="Permalink to &quot;MySQL笔记13-优化&quot;">​</a></h1><p>主要记载一些数据库方面的优化措施。</p><h2 id="sql优化" tabindex="-1">sql优化 <a class="header-anchor" href="#sql优化" aria-label="Permalink to &quot;sql优化&quot;">​</a></h2><h3 id="限定sql语句的查询条件" tabindex="-1">限定SQL语句的查询条件 <a class="header-anchor" href="#限定sql语句的查询条件" aria-label="Permalink to &quot;限定SQL语句的查询条件&quot;">​</a></h3><p>任何查询语句都需要带上限制条件。比如：我们当用户在查询订单历史的时候，我们可以控制在一个月的范围内；否则就会查询全部订单历史，从而给数据库添加压力。就算是要查询全部数据，也要通过分页查询的方式来减轻数据库的压力。</p><h3 id="限定查询结果字段个数" tabindex="-1">限定查询结果字段个数 <a class="header-anchor" href="#限定查询结果字段个数" aria-label="Permalink to &quot;限定查询结果字段个数&quot;">​</a></h3><p>在查询语句中不要使用select * 。若无必要，不要查询全部字段。</p><h3 id="多表查询优化" tabindex="-1">多表查询优化 <a class="header-anchor" href="#多表查询优化" aria-label="Permalink to &quot;多表查询优化&quot;">​</a></h3><ol><li>在需要多表查询的情况下，减少使用子查询，多使用关联查询（left join,right join,inner join）替代。</li><li>减少使用 IN 或者 NOT IN ,使用exists，not exists或者关联查询语句替代</li><li>or 的查询尽量用 union或者union all 代替(在确认没有重复数据或者不用剔除重复数据时，union all会更好)</li></ol><h3 id="查询条件中触发索引" tabindex="-1">查询条件中触发索引 <a class="header-anchor" href="#查询条件中触发索引" aria-label="Permalink to &quot;查询条件中触发索引&quot;">​</a></h3><ol><li>应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则存储引擎会放弃使用索引而进行全表扫描。</li><li>应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如： select id from t where num is null 可以在num上设置默认值0，确保表中num列没有null值，然后这样查询： select id from t where num=0</li></ol><h3 id="limit分页查询优化" tabindex="-1">limit分页查询优化 <a class="header-anchor" href="#limit分页查询优化" aria-label="Permalink to &quot;limit分页查询优化&quot;">​</a></h3><p>一般的分页查询使用简单的limit语句就能实现。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># limit语法如下</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [offset,] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># offset 偏移量，从0开始，可选。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 返回记录数。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 如果只有rows参数，那么就返回从0开始的指定行数据。</span></span></code></pre></div><p>据统计：</p><ul><li>如果偏移量固定，当返回记录数低于100的时候，查询时间差距不大。但是随着返回记录数越大，查询时间越大。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span></span></code></pre></div><ul><li>如果返回记录数不变，当偏移量超过100的时候，随着偏移量越大，查询时间会急剧增加。</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span></code></pre></div><p>问题原因总结：limit的分页查询机制，是每次都会从表的第一条记录开始搜索，因此就算返回记录数只有100，但是随着偏移量越大，那么搜索的时间就越长，查询时间就越长。</p><blockquote><p>优化方式1：通过索引来进行分页。</p></blockquote><p>由于limit分页查询总是会从表的第一条记录开始搜索。因此我们可以通过索引来直接跳到偏移量的位置上，然后再开始分页查询。</p><p>例如，我们想要查询从第1000条开始的100条记录。假设id是自增的。我们可以通过where查询语句，直接跳到1000条。然后再进行分页查询。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 下面两条查询语句的效果是一样的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> studeng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> studeng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span></code></pre></div><blockquote><p>优化方式2：利用子查询进行优化</p></blockquote><p>首先利用子查询，跳到偏移量开始的地方。然后再进行分页查询。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 先定位到偏移量开始的记录上</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> studeng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 然后再进行分页查询</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> studeng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> studeng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span></code></pre></div><h2 id="分库分表" tabindex="-1">分库分表 <a class="header-anchor" href="#分库分表" aria-label="Permalink to &quot;分库分表&quot;">​</a></h2><p>分库是指将存储再同一个数据库的数据，分散存储到不同数据库上，以达到缓解数据库负载的效果。</p><p>分表是指将存储再同一个表上的数据，分散存储到不同表上，以达到缓解表负载的效果。</p><p>分库分表的目的是解决由于数据量过大，从而导致数据库系统性能降低的问题。将原来单个的数据库进行拆分成多个数据库，将原来单个表进行拆分成多个表。从而达到提高数据库系统的性能。</p><p>分库分表有四种方式：垂直分库，垂直分表，水平分库，水平分表。</p><blockquote><p>垂直分库</p></blockquote><p>由于数据库中不同的表对于不同的业务。垂直分库是指将单个数据库中的数据表，按照业务的不同将表进行分类。然后把各个业务的数据表拆分到各个数据库中。并将各个数据库部署再各个服务器上。</p><p><img src="`+i+'" alt="mysql_20231105173941.png"></p><blockquote><p>垂直分表</p></blockquote><p>当表中字段太多时，会影响表的性能。垂直分表是指将单个表的拆分成多个表，每个表存储一部分的字段。这样一个大表就变成了多个小表。</p><p>例如可以将职位表拆分为职位信息表和职位描述表。 <img src="'+a+'" alt="mysql_20231105174516.png"></p><blockquote><p>水平分库</p></blockquote><p>水平分库是指将一个数据库中的数据，切分到多个数据库上。水平分库并不是将数据库中的表按照业务不同进行拆分，而是将表中的数据按照某种逻辑进行分开存储。</p><p>例如将订单表的数据，根据id是奇数还是偶数，来分别存储再不同的数据库上。 <img src="'+l+'" alt="mysql_20231105175455.png"></p><p>水平分库可以有效缓解单个数据库的性能瓶颈和压力。</p><blockquote><p>水平分表</p></blockquote><p>针对某个数据量特别大的单张表，按照某种规则将一个表的数据水分开存储到多个表上。这些表还是存在一个数据库中。</p><p>水平分表可以缓解单个表的性能瓶颈和压力，但是由于还是再一个数据库中，对于数据库的性能还是存在瓶颈的。</p><p>如图将一个职位信息表，水平拆分为多个职位信息表。 <img src="'+n+'" alt="mysql_20231105175858.png"></p><p>总结：</p><ul><li>垂直分表：将一个表按照字段拆分为多个表，每个表存储其中一部分字段。</li><li>垂直分库：将数据库中的表，按照业务逻辑的不同，将表分开存储到不同的数据库上。这些数据库部署再各自的服务器上。</li><li>水平分表：将一个表的数据按照一定规则，分开存储再同一个数据库的多个表中，每个表只存储一部分数据。</li><li>水平分库：将一个表的数据按照一定规则，分库存储在不同数据的同一个表中（即每个数据库都有一个相同名称的表）。每一个表都存储一部分数据。</li></ul><h2 id="数据库表优化" tabindex="-1">数据库表优化 <a class="header-anchor" href="#数据库表优化" aria-label="Permalink to &quot;数据库表优化&quot;">​</a></h2><p>当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下。</p><h3 id="读写分离" tabindex="-1">读写分离 <a class="header-anchor" href="#读写分离" aria-label="Permalink to &quot;读写分离&quot;">​</a></h3><p>经典的数据库拆分方案，主库负责写，从库负责读；</p><h3 id="垂直分区-分表" tabindex="-1">垂直分区（分表） <a class="header-anchor" href="#垂直分区-分表" aria-label="Permalink to &quot;垂直分区（分表）&quot;">​</a></h3><p>根据数据库里面数据表的相关性进行拆分。例如，用户表中既有用户的登录信息又有用户的基本信息，可以将用户表拆分成两个单独的表，甚至放到单独的库做分库。</p><p>简单来说垂直拆分是指数据表列的拆分。把一张列比较多的表拆分为多张表。如图所示。</p><p><img src="'+e+'" alt="mysql_20230825143446.png"></p><ul><li>垂直分区的优点：可以使表的字段更少。在查询表的时候会减少数据库的I/O次数。并且由于将表拆分开，简化了表的结构，从而更加容易维护表。</li><li>垂直分区的缺点：由于将一个表拆分为多个表，为了维持表与表的关系。则外键字段会出现冗余。让以前查询一个表，变得需要查询多个表，从而让事务变得复杂起来。</li></ul><h3 id="水平分区-分库" tabindex="-1">水平分区（分库） <a class="header-anchor" href="#水平分区-分库" aria-label="Permalink to &quot;水平分区（分库）&quot;">​</a></h3><p>保持数据表结构不变，通过某种方式将数据表的数据分散存储。即把数据分散到不同的表或者库中，达到了分布式的目的。</p><p>简单来说水平拆分是指数据表行的拆分。把数据行很多的表，拆分为多个相同的表，每个表存储在不同的数据库中。如图所示</p><p><img src="'+r+`" alt="mysql_20230825145914.png"></p><p>例如表的行数超过200万行时，就会变慢，这时可以把一张的表的数据拆成多张表来存放。举个例子：我们可以将用户信息表拆分成多个用户信息表，把每个信息表存储在不同数据库中，这样就可以避免单一表数据量过大对数据库性能造成影响。</p><p>注意：水平拆分能够 支持非常大的数据量存储，应用端改造也少，但分片事务难以解决 ，跨节点Join性能较差，逻辑复杂。并且分库存储表会带来逻辑、部署、运维的各种复杂度 ，一般的数据表在优化得当的情况下支撑千万以下的数据量是没有太大问题的。</p><h2 id="mysql-主从复制" tabindex="-1">mysql 主从复制 <a class="header-anchor" href="#mysql-主从复制" aria-label="Permalink to &quot;mysql 主从复制&quot;">​</a></h2><h3 id="为什么要主从复制" tabindex="-1">为什么要主从复制？ <a class="header-anchor" href="#为什么要主从复制" aria-label="Permalink to &quot;为什么要主从复制？&quot;">​</a></h3><p>例如：在业务复杂的系统中，有这么一个情景，有一句sql语句需要锁表，导致暂时不能使用读的服务，那么就很影响运行中的业务，使用主从复制，让主库负责写，从库负责读，这样，即使主库出现了锁表的情景，通过读从库也可以保证业务的正常运作。</p><p>另外，主从复制有以下特点。</p><ul><li>数据冗余和备份：通过主从复制，从服务器上的数据是主服务器的冗余副本。</li><li>高可用性：通过主从复制。当主服务器发生故障时，可以手动或自动将某个从服务器提升为新的主服务器，继续提供数据库服务，从而实现快速的故障恢复。</li><li>提高读写性能：主服务器负责处理写操作，从服务器负责处理读操作，从而降低主服务器的负载，提升整个系统的吞吐量。</li><li>数据分析和报表生成：由于从服务器可以处理读操作，可以将其用于数据库的数据分析和报表生成等工作。这样可以避免对主服务器造成额外的负载，同时提供实时的数据分析和报表服务。</li></ul><h3 id="mysql支持的的复制类型" tabindex="-1">mysql支持的的复制类型 <a class="header-anchor" href="#mysql支持的的复制类型" aria-label="Permalink to &quot;mysql支持的的复制类型&quot;">​</a></h3><p>MySQL支持以下几种常见的复制类型：</p><ol><li>基于语句的复制：基于语句的复制是MySQL最早支持的复制方式，它通过复制和执行SQL语句来实现数据的复制和同步，即：在主服务器上执行SQL语句，在从服务器上执行同样的语句。这种方式简单高效，但在一些特殊情况下可能会导致数据不一致。默认情况下都是基于语句的复制。</li><li>基于行的复制：基于行的复制是MySQL较新支持的复制方式，它将每一行的改变记录下来，然后在备库上重放这些改变以实现数据的复制和同步，即:把改变的内容复制过去，而不是把命令在从服务器上执行一遍。这种方式可以更精确地复制数据的改变，但会增加网络传输和存储成本。从MySQL5.0开始支持。</li><li>混合复制：混合复制是基于语句的复制和基于行的复制的结合，MySQL会根据具体情况自动选择使用哪种方式进行复制。默认采用基于语句的复制不行就采用基于行的复制。</li></ol><h3 id="mysql主从复制的原理机制" tabindex="-1">mysql主从复制的原理机制 <a class="header-anchor" href="#mysql主从复制的原理机制" aria-label="Permalink to &quot;mysql主从复制的原理机制&quot;">​</a></h3><p>主从复制的原理机制是通过日志的复制方式来实现数据的同步。当主服务器上发生数据变更时，会将这些变更写入二进制日志（Binary Log）中。从服务器通过连接到主服务器，请求从主服务器获取二进制日志，并将这些日志应用到自己的数据库中。</p><p>主从复制的机制</p><ol><li>主服务器生成二进制日志：在主服务器上，所有的写操作（例如插入、更新、删除）都会被记录在二进制日志中。二进制日志包含了数据库变更的详细信息。</li><li>从服务器连接到主服务器：从服务器通过连接到主服务器。在连接建立时，从服务器会获取到主服务器上当前的二进制日志文件名和位置，作为复制的起点。</li><li>从服务器请求复制数据：从服务器会向主服务器发送一个复制请求，请求从当前的二进制日志位置之后的写操作事件。主服务器根据复制请求，将二进制日志中的事件发送给从服务器。</li><li>从服务器应用复制日志：从服务器接收到主服务器发送的二进制日志后，会解析并应用这些事件到自己的数据库中。从服务器会按照顺序依次执行，以保持数据的一致性。</li><li>复制链路的维护和监控：主从复制过程中，主服务器会持续记录二进制日志，而从服务器会持续请求和应用这些日志。复制链路需要进行监控和维护，以确保复制的正常运行和数据的可靠性。</li></ol><span style="color:red;"> 注：主从复制是异步的，从服务器在应用写操作之前，并不等待主服务器的确认。因此，从服务器上的数据可能会有一定的延迟。 </span><h3 id="如何实现主从复制" tabindex="-1">如何实现主从复制 <a class="header-anchor" href="#如何实现主从复制" aria-label="Permalink to &quot;如何实现主从复制&quot;">​</a></h3><p>主从复制的步骤：</p><ol><li>配置主服务器：在主服务器上，需要开启二进制日志（Binary Log）功能，该功能记录了主服务器上的所有写操作，包括更新、删除和插入。同时需要配置主服务器的唯一标识（server_id）。</li><li>配置从服务器：在从服务器上，需要配置主服务器的IP地址、端口号、用户名和密码等。同时需要配置从服务器的唯一标识（server_id）。</li><li>启动复制：在从服务器上启动复制进程，连接到主服务器并请求复制数据。主服务器将发送二进制日志文件中的写操作事件（event）给从服务器，从服务器接收并应用这些事件，将数据复制到自己的数据库。</li><li>复制过程：复制过程主要包括两个步骤：从服务器请求主服务器的二进制日志，主服务器将日志发送给从服务器；从服务器解析并应用日志中的事件到自己的数据库，保持与主服务器的数据一致性。</li><li>复制链路的监控和维护：可以通过监控工具或命令来查看主从服务器的复制状态和延迟情况。同时，也需要定期备份和维护从服务器，确保数据的安全性和可恢复性。</li></ol><h3 id="搭建mysql主从复制" tabindex="-1">搭建mysql主从复制 <a class="header-anchor" href="#搭建mysql主从复制" aria-label="Permalink to &quot;搭建mysql主从复制&quot;">​</a></h3><ol><li>环境准备</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>两台机器，一主一从。</span></span>
<span class="line"><span>主（master）：192.168.136.134 port：3306</span></span>
<span class="line"><span>从（slave）：192.168.136.135 port：3306</span></span></code></pre></div><ol start="2"><li>配置主库</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/my.cnf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># my.cnf配置文件内容修改如下。设置server-id值并开启二进制日志</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log-bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mysql-bin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">120</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启mysql服务器，让配置生效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysqld</span></span></code></pre></div><ol start="3"><li>在主库上创建一个主从复制用户</li></ol><p>在主库上创建一个主从复制用户。之后从库需要使用这个用户的账户密码，登录到主库上进行主从复制。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建一个主从复制用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;slave_test&#39;@&#39;192.168.136.%&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> identified</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;qwe123456789&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 刷新权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">flush</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> privileges</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建主从复制用户后，查询一下该用户的权限。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grants</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;slave_test&#39;@&#39;192.168.136.%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>grant replication slave: 授予复制数据到从服务器权限</li><li>on <em>.</em>: 应用于所有数据库</li><li>to ‘slave_test’@‘192.168.136.%’: 授权给用户名为’slave_test’，只能从IP地址为192.168.136.开头的主机访问</li><li>identified by ‘qwe123456789’: 设置用户的密码为’qwe123456789’</li></ul><ol start="4"><li>查询主库的二进制日志文件及其偏移量</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><img src="`+d+`" alt="mysql_20231021183625.png"></p><p>二进制日志文件名称及其偏移量，会在从库配置上用到。</p><ol start="5"><li>给主库进行一次数据备份</li></ol><p>这步可做可不做，注意生产环境需要提前申请停机时间。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 锁定所有表，让表处于只读状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#提示：如果超过设置时间不操作会自动解锁。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">flush</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tables</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先给主库做一次全部数据备份</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysqldump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -uroot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gzip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/mysqlbackup/mysql_bak.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.sql.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解锁</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 释放表的锁定状态。这样其他会话才能对表进行写入操作。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unlock</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将数据备份从主库传输到从库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/mysqlbackup/mysql_bak.2023-07-17.sql.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.136.135:/home/mysqlbackup/</span></span></code></pre></div><ul><li>FLUSH TABLES WITH READ LOCK; 它的作用是在当前会话中锁定所有表，并使它们处于只读状态。这个命令常用于备份数据库或进行一些需要确保数据一致性的操作。</li><li>mysqldump: 是一个MySQL提供的工具，用于导出数据库结构和数据。</li><li>-A: 表示导出所有数据库。</li><li>-B: 表示导出全部表结构和数据。</li><li>|: 管道操作符，将前一个命令的输出作为后一个命令的输入。</li><li>gzip: 使用gzip工具对数据进行压缩。</li><li><code>&gt;</code> : 重定向操作符，将输出结果保存到指定的文件中。</li><li>/home/mysqlbackup/mysql_bak.$(date +%F).sql.gz: 指定了备份文件的路径和名称</li><li>scp: 是一个用于在不同主机之间安全地进行文件传输的命令。</li><li>192.168.136.135: 是从库所属的服务器的IP地址。</li><li>/home/mysqlbackup/: 是从库所属的服务器上接收文件的目录路径。</li></ul><ol start="6"><li>从库配置</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改从库配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/my.cnf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改内容如下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">130</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启数据库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysqld</span></span></code></pre></div><ol start="7"><li>在从库服务器中将主库备份数据还原</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/mysqlbackup/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gzip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_bak.2023-07-17.sql.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -uroot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_bak.2023-07-17.sql</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查询从库的数据库，看看是否与主库的数据库一样</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -uroot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;show databases;&#39;</span></span></code></pre></div><ol start="8"><li>在从库服务器中设置主从库数据同步</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行change master to 语句</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">change</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MASTER_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;192.168.136.134&#39;,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              #主库ip</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MASTER_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3306,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                           #主库端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MASTER_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;slave_test&#39;,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #主库授权的用户</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MASTER_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qwe123456789&#39;,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             #主库授权的用户密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MASTER_LOG_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mysql-bin.000001&#39;,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         #主库的二进制文件名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MASTER_LOG_POS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">455</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#主库的二进制文件的偏移量</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动从库的同步</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看主从复制状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\G</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Slave_IO_Running:Yes和Slave_YES_Running:Yes 都是yes的时候表示同步正常。</span></span></code></pre></div><p>其他相关的命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启主从复制</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭主从复制:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重置主从复制：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slave</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,105)]))}const B=h(g,[["render",y]]);export{A as __pageData,B as default};
