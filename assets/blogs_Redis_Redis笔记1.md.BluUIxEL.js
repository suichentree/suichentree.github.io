import{_ as i,c as a,o as n,ak as e}from"./chunks/framework.CmzJUe0_.js";const l="/assets/redis20221010095907.bfLh8kMl.png",p="/assets/redis20221010094849.DD4965r4.png",t="/assets/redis_20230724150640.Dc9kKw0O.png",h="/assets/redis_20230724151132.Btzpxchb.png",k="/assets/redis_20230724152442.D_oKGHoN.png",d="/assets/redis_20230724152619.DNr8DHWn.png",r="/assets/redis_20230724153210.Dp438FfM.png",c="/assets/redis20221010105002.CZ4I-3-S.png",o="/assets/redis_20231115194141.CBsINidB.png",g="/assets/redis_20231115194249.CPtICR0i.png",F="/assets/redis_20230727094805.CqpHC3uC.png",y="/assets/redis_20230727094900.B0nzoCMM.png",u="/assets/redis20221010112603.DAMeiTqi.png",q=JSON.parse('{"title":"Redis笔记1","description":"","frontmatter":{"title":"Redis笔记1","date":"2023-07-24T00:00:00.000Z","sidebar":"auto","categories":["数据库"],"tags":["Redis"]},"headers":[],"relativePath":"blogs/Redis/Redis笔记1.md","filePath":"blogs/Redis/Redis笔记1.md"}'),E={name:"blogs/Redis/Redis笔记1.md"};function C(b,s,B,m,D,v){return n(),a("div",null,s[0]||(s[0]=[e(`<p>[toc]</p><h1 id="redis笔记1" tabindex="-1">Redis笔记1 <a class="header-anchor" href="#redis笔记1" aria-label="Permalink to &quot;Redis笔记1&quot;">​</a></h1><h2 id="什么是nosql数据库" tabindex="-1">什么是NoSql数据库? <a class="header-anchor" href="#什么是nosql数据库" aria-label="Permalink to &quot;什么是NoSql数据库?&quot;">​</a></h2><p><strong>NoSql</strong>可以翻译做Not Only Sql（不仅仅是SQL），或者是No Sql（非Sql的）数据库。是相对于传统关系型数据库而言，有很大区别的一种特殊的数据库，因此也称之为<strong>非关系型数据库</strong>。</p><blockquote><p>传统关系型数据库与NoSql数据库的区别：</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>* 结构化与非结构化</span></span>
<span class="line"><span>传统关系型数据库是结构化数据，每一张表都有严格的约束信息：字段名.字段数据类型.字段约束等等信息，插入的数据必须遵守这些约束。而NoSql则对数据库格式没有严格约束，往往形式松散，自由。可以是键值型,文档型,图类型的等等。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 关联和非关联</span></span>
<span class="line"><span>传统数据库的表与表之间往往存在关联，例如外键。而非关系型数据库不存在关联关系，要维护数据之间的关系要么靠代码中的业务逻辑，要么靠数据之间的耦合。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 查询方式</span></span>
<span class="line"><span>传统关系型数据库会基于Sql语句做查询，语法有统一标准。而不同的非关系数据库查询语法差异极大，五花八门各种各样。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 事务</span></span>
<span class="line"><span>传统关系型数据库能满足事务ACID的原则。而非关系型数据库往往不支持事务，或者不能严格保证ACID的特性，只能实现基本的一致性。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 存储方式</span></span>
<span class="line"><span>关系型数据库基于磁盘进行存储，会有大量的磁盘IO，对性能有一定影响。非关系型数据库，更多的是依赖于内存来进行存储，内存的读写速度会非常快，性能自然会好一些。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 扩展性</span></span>
<span class="line"><span>关系型数据库集群模式一般是主从，主从数据一致，起到数据备份的作用，称为垂直扩展。非关系型数据库可以将数据拆分，存储在不同机器上，可以保存海量数据，解决内存大小有限的问题。称为水平扩展。</span></span></code></pre></div><p><img src="`+l+'" alt="redis20221010095907.png"></p><h2 id="redis介绍" tabindex="-1">Redis介绍 <a class="header-anchor" href="#redis介绍" aria-label="Permalink to &quot;Redis介绍&quot;">​</a></h2><p>Redis 全称 Remote Dictionary Server (远程字典服务器) , 是一个基于内存的key-value数据库。</p><p><img src="'+p+`" alt="redis20221010094849.png"></p><blockquote><p>与其他内存型数据库相比，Redis的特点：</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. Redis 不仅可以将数据完全保存在内存中，还可以通过磁盘实现数据的持久存储；</span></span>
<span class="line"><span>2. Redis 支持丰富的数据类型，包括 string、list、set、zset、hash 等多种数据类型；</span></span>
<span class="line"><span>3. Redis 支持主从同步，即 master-slave 主从复制模式。数据可以从主服务器向任意数量的从服务器上同步，有效地保证数据的安全性；</span></span>
<span class="line"><span>4. Redis 支持多种编程语言，包括 C、C++、Python、Java、PHP、Ruby、Lua 等语言。</span></span></code></pre></div><blockquote><p>Redis的使用场景</p></blockquote><p>Redis 用来缓存一些经常被访问的热点数据、或者需要耗费大量资源的内容，通过把这些内容放到 Redis 中，可以让应用程序快速地读取它们。例如，网站的首页需要经常被访问，并且在创建首页的过程中会消耗的较多的资源，此时就可以使用 Redis 将整个首页缓存起来，从而降低网站的压力，减少页面访问的延迟时间。</p><h2 id="redis的安装与启动" tabindex="-1">Redis的安装与启动 <a class="header-anchor" href="#redis的安装与启动" aria-label="Permalink to &quot;Redis的安装与启动&quot;">​</a></h2><p>大多数企业都是基于Linux系统来部署项目，而且Redis官方也没有提供Windows版本的安装包。因此都会基于Linux系统来安装Redis。</p><h3 id="windows系统下安装启动redis" tabindex="-1">windows系统下安装启动redis <a class="header-anchor" href="#windows系统下安装启动redis" aria-label="Permalink to &quot;windows系统下安装启动redis&quot;">​</a></h3><p>Redis官方没有提供 Windows 版的安装包，但可以通过 GitHub 来下载 Windows 版 Redis安装包。</p><p><a href="https://github.com/tporadowski/redis/releases" target="_blank" rel="noreferrer">Windows 版 Redis安装包下载地址</a></p><p><span style="color:red;">注意：Windows 安装包是某位民间“大神”根据 Redis 源码改造的，并非 Redis 官方网站提供。</span></p><ol><li>下载redis安装包 <img src="`+t+'" alt="redis_20230724150640.png"><img src="'+h+'" alt="redis_20230724151132.png"></li></ol><ul><li>redis.windwos.conf是配置文件</li><li>redis.cli.exe 是redis客户端程序</li><li>redis-server.exe 是redis服务端程序</li></ul><ol start="2"><li><p>启动服务端程序，双击redis-server.exe。会看到如下界面 <img src="'+k+'" alt="redis_20230724152442.png"> 注意，请您保持服务端始终处于开启状态，否则客户端无法正常工作。</p></li><li><p>启动客户端程序，双击客户端启动程序redis-cli.exe。如图所示，表示redis客户端与服务端连接成功。 <img src="'+d+'" alt="redis_20230724152619.png"></p></li><li><p>将redis安装路径配置到环境变量中。这样可以在终端的任何位置运行redis的命令。 <img src="'+r+`" alt="redis_20230724153210.png"></p></li><li><p>还可以通过命令行来启动redis.</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>开启redis服务端：redis-server --service-start</span></span>
<span class="line"><span>停止redis服务端：redis-server --service-stop</span></span>
<span class="line"><span>卸载redis服务端：redis-server --service-uninstall</span></span>
<span class="line"><span>启动redis客户端：redis-cli</span></span></code></pre></div><h3 id="ubuntu系统下安装启动redis" tabindex="-1">ubuntu系统下安装启动redis <a class="header-anchor" href="#ubuntu系统下安装启动redis" aria-label="Permalink to &quot;ubuntu系统下安装启动redis&quot;">​</a></h3><p>相比于 Windows 系统而言，Redis 更适合于在 Linux 系统上使用，这是由 Redis 的底层机制决定的。</p><blockquote><p>命令行在线安装</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 在 Ubuntu 终端执行相应的命令即可在线安装 Redis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 启动Redis服务端</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 启动Redis客户端</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#简单格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#若设置了密码，使用如下格式启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ip] -p [port] -a [password]</span></span></code></pre></div><blockquote><p>源代码安装</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1.首先从redis官网下载redis源代码。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将安装包放到/usr/local/src目录，并解压安装包。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xzf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-5.0.4.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译并安装源代码包</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-5.0.4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装完成后，redis会默认安装在/usr/local/bin目录下。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 进入安装目录中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./redis-server</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 启动服务端</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./redis-cli</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # 启动客户端</span></span></code></pre></div><p><img src="`+c+`" alt="redis20221010105002.png"></p><h3 id="docker环境下安装启动redis" tabindex="-1">Docker环境下安装启动redis <a class="header-anchor" href="#docker环境下安装启动redis" aria-label="Permalink to &quot;Docker环境下安装启动redis&quot;">​</a></h3><blockquote><p>步骤① 先安装docker环境，自行百度。</p></blockquote><blockquote><p>步骤② 下载redis镜像文件。最新版或某个版本</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载最新版的redis镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载某个版本的redis镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis:7.2.3-alpine</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre></div><p>alpine 是一个轻量的linux系统，这边版本表示是轻量版。</p><blockquote><p>步骤③ 创建redis的容器的存储目录，即容器数据卷</p></blockquote><p>需要创建一个conf目录和data目录，分别存储redis容器的配置和数据。</p><blockquote><p>步骤④ 下载官方redis配置文件，并修改</p></blockquote><p>下载官方的redis配置文件，注意配置文件要与redis容器版本要对应。不同版本的配置文件有差别，无法适配。</p><p>修改内容如下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意，这个要注释掉，使redis可以外部访问</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># bind 127.0.0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 守护进程设置为no,不要设置为yes，否则与docker -d命令冲突，从而导致容器启动失败。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">daemonize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 给redis设置密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requirepass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123456</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># redis持久化，默认是no，改为yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendonly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span></code></pre></div><blockquote><p>步骤⑤：创建并启动redis容器</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建容器并启动</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># redis-server /etc/redis/redis.conf 在容器启动的时候运行redis-server的命令，用于加载容器内的 conf 文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myRedis&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --privileged=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 36379:6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /d/DockerVolumes/redis/conf/redis.conf:/etc/redis/redis.conf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /d/DockerVolumes/redis/data:/data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis:7.2.3-alpine</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/redis/redis.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询容器日志，看是否成功启动。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myRedis</span></span></code></pre></div><ul><li>注意：/d/DockerVolumes/... 是windows环境下D盘的DockerVolumes目录。如果宿主机是linux系统，可以设置其他目录。</li></ul><p>如图是window的docker客户端。显示的是redis容器 <img src="`+o+'" alt="redis_20231115194141.png"></p><blockquote><p>步骤6：redis客户端连接redis容器即可。</p></blockquote><p><img src="'+g+`" alt="redis_20231115194249.png"></p><h2 id="redis配置文件" tabindex="-1">Redis配置文件 <a class="header-anchor" href="#redis配置文件" aria-label="Permalink to &quot;Redis配置文件&quot;">​</a></h2><p>windows系统中 Redis 的安装目录中有一个名为 redis.windows.conf 的配置文件，Linux 系统中则为 redis.conf。</p><h3 id="查看配置信息" tabindex="-1">查看配置信息 <a class="header-anchor" href="#查看配置信息" aria-label="Permalink to &quot;查看配置信息&quot;">​</a></h3><p>以使用Redis的<code>CONFIG</code>命令来查看或者更改Redis的配置信息。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 语法如下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置名称</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取日志配置信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loglevel&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;notice&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有配置信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dbfilename&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dump.rdb&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">......</span></span></code></pre></div><h3 id="修改配置信息" tabindex="-1">修改配置信息 <a class="header-anchor" href="#修改配置信息" aria-label="Permalink to &quot;修改配置信息&quot;">​</a></h3><p>如果我们需要修改redis配置文件的时候，一般是将原配置文件进行备份，然后再修改。</p><ol><li>将redis.conf原配置文件复制重命名为redis.conf.backup</li><li>修改配置</li></ol><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许访问的地址，默认是127.0.0.1，会导致只能在本地访问。修改为0.0.0.0则可以在任意IP访问，生产环境不要设置为0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bind 0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 守护进程，修改为yes后就默认为后台运行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">daemonize yes </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 密码，设置后访问Redis必须输入密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirepass 123456</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Redis默认端口为 6379.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port 6379</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据库数量，设置为16，代表使用16个数据库，默认有16个库，编号0~15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">databases 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置redis能够使用的最大内存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maxmemory 512mb</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 工作目录，默认是当前目录，也就是运行redis-server时的命令，日志、持久化等文件会保存在这个目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dir .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志文件，默认为空(即不记录日志)，可以指定日志文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logfile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;redis.log&quot;</span></span></code></pre></div><ol start="3"><li>重新启动Redis</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入redis安装目录 </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/src/redis-6.2.6</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定配置文件启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis.conf</span></span></code></pre></div><h3 id="配置文件配置项" tabindex="-1">配置文件配置项 <a class="header-anchor" href="#配置文件配置项" aria-label="Permalink to &quot;配置文件配置项&quot;">​</a></h3><p><img src="`+F+'" alt="redis_20230727094805.png"><img src="'+y+`" alt="redis_20230727094900.png"></p><h2 id="redis开机自启" tabindex="-1">Redis开机自启 <a class="header-anchor" href="#redis开机自启" aria-label="Permalink to &quot;Redis开机自启&quot;">​</a></h2><p>可以通过配置来实现Redis开机自启。</p><ol><li>新建一个systemctl服务文件：</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/redis.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># redis.service内容如下：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis-server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">network.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">forking</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/local/bin/redis-server</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /usr/local/src/redis-6.2.6/redis.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PrivateTmp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">multi-user.target</span></span></code></pre></div><ol start="2"><li>然后重新加载systemctl服务：</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span></code></pre></div><ol start="3"><li>现在可以用下面这组命令来操作redis：</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 让redis开机自启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span></code></pre></div><h2 id="redis图形化客户端" tabindex="-1">Redis图形化客户端 <a class="header-anchor" href="#redis图形化客户端" aria-label="Permalink to &quot;Redis图形化客户端&quot;">​</a></h2><p>在这个github仓库可以找到Redis图形化桌面客户端安装包：<a href="https://github.com/lework/RedisDesktopManager-Windows/releases" target="_blank" rel="noreferrer">下载链接</a></p><ol><li>安装redis图形化桌面客户端</li><li>运行该客户端，填写redis配置信息。链接redis服务器。 <img src="`+u+'" alt="redis20221010112603.png"></li></ol><p>Redis默认有16个仓库，编号从0至15. 通过配置文件可以设置仓库数量，但是不超过16，并且不能自定义仓库名称。</p>',73)]))}const _=i(E,[["render",C]]);export{q as __pageData,_ as default};
