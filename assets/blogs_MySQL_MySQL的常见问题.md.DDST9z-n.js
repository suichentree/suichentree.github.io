import{_ as a,c as n,o as p,ak as l}from"./chunks/framework.CmzJUe0_.js";const i="/assets/20220427103846.BY5m_zSJ.png",e="/assets/20220704105831.Cau-Wyol.png",u=JSON.parse('{"title":"MySQL的常见问题","description":"","frontmatter":{"title":"MySQL的常见问题","date":"2022-04-27T00:00:00.000Z","sidebar":"auto","categories":["数据库"],"tags":["MySql"]},"headers":[],"relativePath":"blogs/MySQL/MySQL的常见问题.md","filePath":"blogs/MySQL/MySQL的常见问题.md"}'),t={name:"blogs/MySQL/MySQL的常见问题.md"};function o(c,s,r,d,h,y){return p(),n("div",null,s[0]||(s[0]=[l(`<p>[toc]</p><h2 id="mysql的常见问题" tabindex="-1">MySQL的常见问题 <a class="header-anchor" href="#mysql的常见问题" aria-label="Permalink to &quot;MySQL的常见问题&quot;">​</a></h2><h3 id="windows下-修改mysql配置文件并重启mysql服务" tabindex="-1">Windows下,修改mysql配置文件并重启mysql服务 <a class="header-anchor" href="#windows下-修改mysql配置文件并重启mysql服务" aria-label="Permalink to &quot;Windows下,修改mysql配置文件并重启mysql服务&quot;">​</a></h3><p><span style="color:red;">下面的命令都必须在MySQL的bin目录下运行，并且是管理员身份打开命令窗口CMD</span></p><p>MySQL配置文件my.ini的位置：C:\\ProgramData\\MySQL\\MySQL Server 8.0\\my.ini</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>0. 管理员身份打开命令行窗口</span></span>
<span class="line"><span>1. 进入到mysql的bin目录: cd C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin</span></span>
<span class="line"><span>2. 停止mysql服务：net stop mysql</span></span>
<span class="line"><span>3. 修改my.ini配置文件</span></span>
<span class="line"><span>4. 启动服务：net start mysql</span></span></code></pre></div><h3 id="windows下-net-stop-mysql-net-start-mysql-命令系统无法识别" tabindex="-1">Windows下，net stop mysql,net start mysql 命令系统无法识别 <a class="header-anchor" href="#windows下-net-stop-mysql-net-start-mysql-命令系统无法识别" aria-label="Permalink to &quot;Windows下，net stop mysql,net start mysql 命令系统无法识别&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>解决办法：需要安装mysqld命令服务才行</span></span>
<span class="line"><span>--安装mysqld命令服务</span></span>
<span class="line"><span>0. 管理员身份打开命令行窗口</span></span>
<span class="line"><span>1. 进入到mysql的bin目录: cd C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin </span></span>
<span class="line"><span>2. mysqld.exe –install</span></span></code></pre></div><h3 id="windows下-mysql重启方式" tabindex="-1">windows下，mysql重启方式 <a class="header-anchor" href="#windows下-mysql重启方式" aria-label="Permalink to &quot;windows下，mysql重启方式&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>第一种：命令行</span></span>
<span class="line"><span>&gt; net stop mysql 关闭服务</span></span>
<span class="line"><span>&gt; net start mysql 开启服务</span></span>
<span class="line"><span></span></span>
<span class="line"><span>第二种：计算机管理界面</span></span>
<span class="line"><span>我的电脑——(右键)管理——服务与应用程序——服务——MYSQL——开启(停止、重启动)</span></span></code></pre></div><h3 id="windows下mysql服务启动后停止的解决方法" tabindex="-1">windows下Mysql服务启动后停止的解决方法 <a class="header-anchor" href="#windows下mysql服务启动后停止的解决方法" aria-label="Permalink to &quot;windows下Mysql服务启动后停止的解决方法&quot;">​</a></h3><p>问题来源：当你想要修改mysql的配置文件my.ini。若你是通过计算机管理界面哪里停止了mysql服务，修改配置文件，然后重启mysql服务。此时就有可能会出现该问题。</p><p>PS: my.ini配置文件的位置：C:\\ProgramData\\MySQL\\MySQL Server 8.0 这是一个隐藏文件夹</p><p><img src="`+i+`" alt="20220427103846.png"></p><p>解决方法：</p><p><span style="color:red;">下面的命令都必须在MySQL的bin目录下运行，并且是管理员身份</span></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 以管理员身份运行CMD,进入到mysql安装目录的bin目录</span></span>
<span class="line"><span>cd C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. 用命令把原来的服务删除，mysql是名称，也有可能是其他名称。</span></span>
<span class="line"><span>mysqld --remove mysql</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. 在mysql的安装根目录下，删除data目录，如果没有data目录，则新建一个data空目录</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4. 运行初始化mysql服务命令</span></span>
<span class="line"><span>mysqld --initialize-insecure --user=mysql</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5. 运行更新配置文件命令</span></span>
<span class="line"><span>mysqld --install mysql --defaults-file=C:\\ProgramData\\MySQL\\MySQL Server 8.0\\my.ini</span></span>
<span class="line"><span></span></span>
<span class="line"><span>6. 安装mysql服务命令</span></span>
<span class="line"><span>mysqld.exe –install</span></span>
<span class="line"><span></span></span>
<span class="line"><span>7.  启动服务</span></span>
<span class="line"><span>net start mysql</span></span>
<span class="line"><span></span></span>
<span class="line"><span>8.  注意新的mysql服务,root用户的密码是空的</span></span>
<span class="line"><span>mysql -u root –p</span></span></code></pre></div><h3 id="mysql-5-x版本修改root密码的4种方法-以windows为例" tabindex="-1">Mysql 5.x版本修改root密码的4种方法(以windows为例) <a class="header-anchor" href="#mysql-5-x版本修改root密码的4种方法-以windows为例" aria-label="Permalink to &quot;Mysql 5.x版本修改root密码的4种方法(以windows为例)&quot;">​</a></h3><p><span style="color:red;">下面的命令都必须在MySQL的bin目录下运行，并且是管理员身份打开命令窗口CMD</span></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>方法1： 用SET PASSWORD命令</span></span>
<span class="line"><span>首先登录MySQL。</span></span>
<span class="line"><span>格式：mysql&gt; set password for 用户名@localhost = password(&#39;新密码&#39;);</span></span>
<span class="line"><span>例子：mysql&gt; set password for root@localhost = password(&#39;123&#39;);</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>方法2：用mysqladmin</span></span>
<span class="line"><span>格式：mysqladmin -u用户名 -p旧密码 password 新密码</span></span>
<span class="line"><span>例子：mysqladmin -uroot -p123456 password 123</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>方法3：用UPDATE直接编辑user表</span></span>
<span class="line"><span>首先登录MySQL。</span></span>
<span class="line"><span>mysql&gt; use mysql;</span></span>
<span class="line"><span>mysql&gt; update user set password=password(&#39;123&#39;) where user=&#39;root&#39; and host=&#39;localhost&#39;;</span></span>
<span class="line"><span>mysql&gt; flush privileges;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>方法4：在忘记root密码的时候</span></span>
<span class="line"><span></span></span>
<span class="line"><span>以windows为例：</span></span>
<span class="line"><span>1. 关闭正在运行的MySQL服务。</span></span>
<span class="line"><span>2. 打开DOS窗口，转到mysql\\bin目录。</span></span>
<span class="line"><span>3. 输入mysqld --skip-grant-tables 回车。--skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。</span></span>
<span class="line"><span>4. 再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\\bin目录。</span></span>
<span class="line"><span>5. 输入mysql回车，如果成功，将出现MySQL提示符 &gt;。</span></span>
<span class="line"><span>6. 连接权限数据库： use mysql; 。</span></span>
<span class="line"><span>6. 改密码：update user set password=password(&quot;123&quot;) where user=&quot;root&quot;;（别忘了最后加分号） 。</span></span>
<span class="line"><span>7. 刷新权限（必须步骤）：flush privileges;　。</span></span>
<span class="line"><span>8. 退出 quit。</span></span>
<span class="line"><span>9. 注销系统，再进入，使用用户名root和刚才设置的新密码123登录。</span></span></code></pre></div><h3 id="mysql-8-x版本修改root密码的方法-以windows为例" tabindex="-1">Mysql 8.X版本修改root密码的方法(以windows为例) <a class="header-anchor" href="#mysql-8-x版本修改root密码的方法-以windows为例" aria-label="Permalink to &quot;Mysql 8.X版本修改root密码的方法(以windows为例)&quot;">​</a></h3><span style="color:red;"> mysql 5.7.9以后废弃了password字段和password()函数；在user表加了authentication_string字段，该字段表示用户加密密码。因此MySql 从8.0开始修改密码有了变化，修改密码需要前先检查authentication_string是否为空 </span><p><span style="color:red;">注意：下面的命令都必须在MySQL的bin目录下运行，并且是管理员身份打开命令窗口CMD</span></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 若 authentication_string 不为空</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 切换数据库</span></span>
<span class="line"><span>&gt;use mysql; </span></span>
<span class="line"><span>-- 将字段置为空</span></span>
<span class="line"><span>&gt;update user set authentication_string=&#39;&#39; where user=&#39;root&#39;;</span></span>
<span class="line"><span>-- 修改密码为root</span></span>
<span class="line"><span>&gt;ALTER user &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;root&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. 若 authentication_string 为空</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 切换数据库</span></span>
<span class="line"><span>&gt;use mysql; </span></span>
<span class="line"><span>-- 直接修改密码为root</span></span>
<span class="line"><span>&gt;ALTER user &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;root&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. 若出现以下错误</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement</span></span>
<span class="line"><span></span></span>
<span class="line"><span>则执行</span></span>
<span class="line"><span>-- 123为旧密码</span></span>
<span class="line"><span>&gt; GRANT ALL PRIVILEGES ON *.* TO IDENTIFIED BY &#39;123&#39; WITH GRANT OPTION;</span></span>
<span class="line"><span>&gt; flush privileges;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4. 然后执行</span></span>
<span class="line"><span>-- 修改密码为root</span></span>
<span class="line"><span>ALTER user &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;root&#39;;</span></span></code></pre></div><h3 id="windows系统下修改mysql字符集为utf8的方法" tabindex="-1">windows系统下修改mysql字符集为utf8的方法 <a class="header-anchor" href="#windows系统下修改mysql字符集为utf8的方法" aria-label="Permalink to &quot;windows系统下修改mysql字符集为utf8的方法&quot;">​</a></h3><p>最简单的修改方法，就是修改mysql的配置文件my.ini文件中的字符集键值</p><p>PS: my.ini配置文件的位置：C:\\ProgramData\\MySQL\\MySQL Server 8.0 这是一个隐藏文件夹</p><p><span style="color:red;">注意：下面的命令都必须在MySQL的bin目录下运行，并且是管理员身份打开命令窗口CMD</span></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>## 注意：windows下的mysql没有重启，只有关闭和开启</span></span>
<span class="line"><span>1. 停止mysql服务：net stop mysql</span></span>
<span class="line"><span>2. 修改配置文件</span></span>
<span class="line"><span>default-character-set = utf8</span></span>
<span class="line"><span>character_set_server = utf8</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3. 开启服务 net start mysql</span></span>
<span class="line"><span>4. 登录mysql查看</span></span>
<span class="line"><span>mysql&gt; SHOW VARIABLES LIKE &#39;character%&#39;;</span></span></code></pre></div><h3 id="linux系统下修改mysql默认字符集的方法" tabindex="-1">Linux系统下修改mysql默认字符集的方法 <a class="header-anchor" href="#linux系统下修改mysql默认字符集的方法" aria-label="Permalink to &quot;Linux系统下修改mysql默认字符集的方法&quot;">​</a></h3><p>最简单的修改方法，就是修改mysql的my.ini文件中的字符集键值</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>default-character-set = utf8</span></span>
<span class="line"><span>character_set_server = utf8</span></span></code></pre></div><p>修改完后，重启mysql的服务，service mysql restart</p><p>之后 mysql&gt; SHOW VARIABLES LIKE &#39;character%&#39;;查看</p><h3 id="mysql编写存储过程大批量插入数据" tabindex="-1">Mysql编写存储过程大批量插入数据 <a class="header-anchor" href="#mysql编写存储过程大批量插入数据" aria-label="Permalink to &quot;Mysql编写存储过程大批量插入数据&quot;">​</a></h3><p>通过mysql快速创建数据</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>//批量插入数据</span></span>
<span class="line"><span>DROP PROCEDURE IF EXISTS proc_initData; -- 如果存在此存储过程则删掉</span></span>
<span class="line"><span>DELIMITER $</span></span>
<span class="line"><span>CREATE PROCEDURE proc_initData()</span></span>
<span class="line"><span>BEGIN</span></span>
<span class="line"><span>    DECLARE i INT DEFAULT 1;</span></span>
<span class="line"><span>    WHILE i&lt;=40 DO</span></span>
<span class="line"><span>        INSERT INTO \`chiltoonv2\`.\`shu_traincamp_file\` (\`name\`, \`daka_num\`, \`file_url\`) VALUES (&#39;童书图片&#39;, &#39;20&#39;, CONCAT(&#39;/tongshu_img/20-&#39; , i , &#39;.jpg&#39;));</span></span>
<span class="line"><span>        SET i = i+1;</span></span>
<span class="line"><span>    END WHILE;</span></span>
<span class="line"><span>END $</span></span>
<span class="line"><span>CALL proc_initData();</span></span></code></pre></div><h3 id="navicat用ssh方式连接远程数据库" tabindex="-1">Navicat用SSH方式连接远程数据库 <a class="header-anchor" href="#navicat用ssh方式连接远程数据库" aria-label="Permalink to &quot;Navicat用SSH方式连接远程数据库&quot;">​</a></h3><p><span style="color:red;">当navicat常规方式连接远程数据库失败时。可使用SSH方式来连接远程数据库。</span></p><p><span style="color:blue;">SSH方式：主要是navicat先连接到服务器上,之后再连接到服务器上的数据库上。</span></p><ol><li>在SSH界面，填写远程服务器的ip,端口,用户名（服务器用户名）,密码（服务器密码）</li><li>之后在常规界面，填写主机名（相对服务器的主机名，就是localhost，127.0.0.1等）。用户名（数据库用户名），密码（数据库密码）</li><li>之后点击确认即可。</li></ol><h3 id="mysql从一个表中查询数据-插入到另一个表中。" tabindex="-1">mysql从一个表中查询数据，插入到另一个表中。 <a class="header-anchor" href="#mysql从一个表中查询数据-插入到另一个表中。" aria-label="Permalink to &quot;mysql从一个表中查询数据，插入到另一个表中。&quot;">​</a></h3><blockquote><p>1.若表t_a和表t_b字段相同</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>insert into t_a  select * from t_b;</span></span></code></pre></div><blockquote><p>2.若只插入指定字段(相对应字段的类型必须保持一致)</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>insert into t_a (name,age) select name,age from t_b where age &gt; 10;</span></span></code></pre></div><blockquote><p>3.若只导入目标表中不存在的记录</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>insert into t_a (name) select name from t_b where not exists (select * from t_a where t_a.name = t_b.name);</span></span></code></pre></div><h3 id="彻底卸载mysql5-x的方法" tabindex="-1">彻底卸载MySQL5.X的方法 <a class="header-anchor" href="#彻底卸载mysql5-x的方法" aria-label="Permalink to &quot;彻底卸载MySQL5.X的方法&quot;">​</a></h3><p>如何完整的卸载MySQL 5.1的卸载方法：</p><ol><li>控制面板里的进行程序卸载</li><li>删除安装目录中MySQL文件夹的my.ini文件，如果备份好，可以直接将文件夹全部删除</li><li>开始-&gt;运行-&gt; regedit 看看注册表里这几个地方删除没有 HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL 目录删除 HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL 目录删除 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL 目录删除（我卸载的时候没有找到，略过后仍达到完全卸载的目的。）</li><li>这一条是很关键的: C:\\Documents and Settings\\All Users\\Application Data\\MySQL。或者 C:\\ProgramData\\MySQL 这里还有MySQL的文件，必须要删除 注意：Application Data这个文件夹是隐藏的。</li></ol><p>以上4步完成，重启电脑 OK！再次安装吧</p><h3 id="centos7安装mysql提示-no-package-mysql-server-available" tabindex="-1">CentOS7安装mysql提示“No package mysql-server available <a class="header-anchor" href="#centos7安装mysql提示-no-package-mysql-server-available" aria-label="Permalink to &quot;CentOS7安装mysql提示“No package mysql-server available&quot;">​</a></h3><p>原因是：CentOS7带有MariaDB而不是MySQL，MariaDB和MySQL一样也是开元的数据库，可以使用yum -y install mariadb-server mariadb命令安装mariadb</p><p>解决方案：</p><ol><li>如果必须要安装MySQL，首先必须添加mysql社区仓库。输入命令：<code>sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</code></li><li>最后使用像安装MySQL的常规方法一样安装mysql： yum install mysql mysql-server mysql-libs mysql-server</li></ol><h3 id="mysql服务端如何处理客户端的请求" tabindex="-1">mysql服务端如何处理客户端的请求？ <a class="header-anchor" href="#mysql服务端如何处理客户端的请求" aria-label="Permalink to &quot;mysql服务端如何处理客户端的请求？&quot;">​</a></h3><p><img src="`+e+`" alt="20220704105831.png"></p><p>服务器程序处理来自客户端的查询请求大致需要经过三个部分，分别是连接管理,解析与优化,存储引擎 。</p><blockquote><p>第一部分：连接管理</p></blockquote><ul><li>mysql客户端通过 TCP/IP，命名管道或共享内存，Unix域套接字 这几种方式之一来与mysql服务器建立连接。</li><li>在mysql客户端发起连接的时候，会携带主机信息、用户名、密码,mysql服务器会对客户端程序提供的这些信息进行认证。</li></ul><blockquote><p>第二部分：解析与优化</p></blockquote><ol><li>查询缓存 若mysql客户端发送过来的请求是查询请求。先在缓存中查询是否有一摸一样的请求。若有则直接将该请求的查询结果返回给客户端。若无则往下面流程走。</li><li>语法解析 MySQL服务器对请求文本做分析，判断请求的语法是否正确，然后从文本中把要查询的表、查询条件都提取出来。</li><li>查询优化 语法解析之后，mysql服务器把请求文本中表，条件等信息提取出来。之后mysql服务器会吧这些提取出来的信息进行优化。转化为一个执行计划。根据计划来执行sql语句。</li></ol><blockquote><p>第三部分：存储引擎</p></blockquote><p>存储引擎根据执行计划来对文件系统进行数据操作。</p><p>mysql中存储引擎是负责对表中的数据进行提取和写入工作的，不同的存储引擎对数据的物理存储结构不同。数据的提取算法也不同。提供的各项特色功能也不同。</p><p><span style="color:red;">InnoDB是MySQL默认的存储引擎。</span></p><blockquote><p>PS:查询缓存原理</p></blockquote><ol><li>mysql会将刚刚处理过的查询请求和对应的查询结果，缓存起来。若下次有一摸一样的查询请求，则直接从缓存中查询结果。</li><li>两个查询请求在任何字符上的不同都会被mysql认为这是两个不同的查询请求。会导致不走缓存。</li><li>若查询请求中包含系统函数，用户自定义变量和函数等。都会导致mysql不对这个查询请求进行缓存。</li><li>MySQL的缓存系统会监测涉及到的每张表,只要某个表的结构或者数据被修改。那使用该表的缓存都将变为无效并从缓存中删除。</li></ol><p><span style="color:red;">从MySQL5.7.20开始，不推荐使用查询缓存，并在MySQL 8.0中删除。</span></p><h3 id="mysql中的utf8和utf8mb4字符集" tabindex="-1">mysql中的utf8和utf8mb4字符集 <a class="header-anchor" href="#mysql中的utf8和utf8mb4字符集" aria-label="Permalink to &quot;mysql中的utf8和utf8mb4字符集&quot;">​</a></h3><ul><li>utf8mb3 ：阉割过的 utf8 字符集，只使用1～3个字节表示字符。</li><li>utf8mb4 ：正宗的 utf8 字符集，使用1～4个字节表示字符。</li><li>在 MySQL 中 utf8 是 utf8mb3 的别名，如果有使用4字节编码一个字符的情况，比如存储一些emoji表情啥的，那就使用utf8mb4</li></ul><h3 id="mysql实现标签查询的效果。" tabindex="-1">mysql实现标签查询的效果。 <a class="header-anchor" href="#mysql实现标签查询的效果。" aria-label="Permalink to &quot;mysql实现标签查询的效果。&quot;">​</a></h3><p>例如一个电影表，一个标签表，一个电影标签表。每个电影都对应多个标签，那么如何通过sql的方式，将符合标签的电影查询出来。</p><p>sql如下。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">## 查询电影标签表中，标签id包含为1，</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，3的电影id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">## 并且根据电影id分组，并且分组数量为3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> media_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_media_tag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tag_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> media_id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HAVING</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span></code></pre></div><p>上面的sql的意思就是查询电影标签表中，标签id同时包含为1，2，3的电影id。</p><p>如果没有<code>HAVING COUNT(*) = 3</code>,那么查询的就是电影标签表中标签id中有1，2，3的电影id。</p>`,81)]))}const q=a(t,[["render",o]]);export{u as __pageData,q as default};
