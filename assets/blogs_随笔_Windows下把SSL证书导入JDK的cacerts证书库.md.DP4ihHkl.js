import{_ as s,c as e,o as t,ak as c}from"./chunks/framework.CmzJUe0_.js";const h=JSON.parse('{"title":"Windows下把SSL证书导入JDK的cacerts证书库","description":"","frontmatter":{"title":"Windows下把SSL证书导入JDK的cacerts证书库","date":"2022-11-10T00:00:00.000Z","sidebar":"auto","categories":["随笔"]},"headers":[],"relativePath":"blogs/随笔/Windows下把SSL证书导入JDK的cacerts证书库.md","filePath":"blogs/随笔/Windows下把SSL证书导入JDK的cacerts证书库.md"}'),i={name:"blogs/随笔/Windows下把SSL证书导入JDK的cacerts证书库.md"};function n(o,a,r,l,d,p){return t(),e("div",null,a[0]||(a[0]=[c(`<h1 id="windows下如何把安全证书导入到jdk的cacerts证书库" tabindex="-1">Windows下如何把安全证书导入到JDK的cacerts证书库 <a class="header-anchor" href="#windows下如何把安全证书导入到jdk的cacerts证书库" aria-label="Permalink to &quot;Windows下如何把安全证书导入到JDK的cacerts证书库&quot;">​</a></h1><p>使用场景：当你在本地环境下调用其他网站的服务时。由于其他网站地址是HTTPS开头的，这时你的java代码中必须包含该网站的SSL安全证书。因此如何把SSL证书导入JDK中的cacerts的证书库呢？</p><h2 id="下载网站的ssl证书" tabindex="-1">下载网站的SSL证书 <a class="header-anchor" href="#下载网站的ssl证书" aria-label="Permalink to &quot;下载网站的SSL证书&quot;">​</a></h2><ol><li>点击网站的小锁的图标，弹出网站证书信息，点击“证书信息”，再点击详细信息。</li><li>此时弹出一个证书导出的向导对话框，按提示就可以将证书导出到本地。</li></ol><h2 id="把ssl证书导入到jdk-中的cacerts的证书库里" tabindex="-1">把SSL证书导入到JDK 中的cacerts的证书库里 <a class="header-anchor" href="#把ssl证书导入到jdk-中的cacerts的证书库里" aria-label="Permalink to &quot;把SSL证书导入到JDK 中的cacerts的证书库里&quot;">​</a></h2><p>① 以管理员身份运行cmd ② 假设jdk安装在C:/Program Files/Java/jdk1.8.0_111目录上。需要运行以下命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>keytool -import -v -trustcacerts -alias chutianyun.gov.cn -file C:/Users/Administrator/Desktop/chutianyun.gov.cn.cer -storepass changeit -keystore &quot;C:/Program Files/Java/jdk1.8.0_111/jre/lib/security/cacerts&quot;</span></span></code></pre></div><ol><li>chutianyun.gov.cn 为证书名称，名称随便取。需要保证jdk中没有同名证书。</li><li>C:/Users/Administrator/Desktop/chutianyun.gov.cn.cer 为证书所在地址</li><li>changeit是密码，jdk默认的</li><li>如果提示：“是否信任此证书？[ 否]：”，那么请输入“y” 。当出现：“证书已添加到密钥库中[ 正在存储cacerts] ”的时候，那么恭喜你已经添加成功</li></ol><p>③ keytool 常用命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>//查看的jdk cacerts证书库中的证书列表</span></span>
<span class="line"><span>keytool -list -keystore&quot;C:/Program Files/Java/jdk1.8.0_111/jre/lib/security/cacerts&quot;-storepass changeit</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 删除cacerts证书库中指定名称的证书：</span></span>
<span class="line"><span>keytool -delete -alias chutianyun.gov.cn -keystore&quot;C:/ProgramFiles/Java/jdk1.8.0_65/jre/lib/security/cacerts&quot;-storepass changeit</span></span></code></pre></div>`,10)]))}const _=s(i,[["render",n]]);export{h as __pageData,_ as default};
