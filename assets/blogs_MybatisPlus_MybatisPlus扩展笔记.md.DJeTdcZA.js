import{_ as i,c as a,o as n,ak as l}from"./chunks/framework.CmzJUe0_.js";const g=JSON.parse('{"title":"MybatisPlus扩展笔记","description":"","frontmatter":{"title":"MybatisPlus扩展笔记","date":"2023-09-23T00:00:00.000Z","sidebar":"auto","categories":["后端"],"tags":["MybatisPlus"]},"headers":[],"relativePath":"blogs/MybatisPlus/MybatisPlus扩展笔记.md","filePath":"blogs/MybatisPlus/MybatisPlus扩展笔记.md"}'),t={name:"blogs/MybatisPlus/MybatisPlus扩展笔记.md"};function p(h,s,k,e,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<p>[toc]</p><h1 id="mybatisplus扩展笔记" tabindex="-1">MybatisPlus扩展笔记 <a class="header-anchor" href="#mybatisplus扩展笔记" aria-label="Permalink to &quot;MybatisPlus扩展笔记&quot;">​</a></h1><h2 id="更新字段为-null" tabindex="-1">更新字段为 null <a class="header-anchor" href="#更新字段为-null" aria-label="Permalink to &quot;更新字段为 null&quot;">​</a></h2><blockquote><p>情景介绍</p></blockquote><p>在使用 mybatis-plus 进行开发时，默认情况下当 mybatis-plus 在更新数据时时会判断字段是否为 null，如果是 null 则不会更新该字段的值（update语句中没有该字段），也就是更新后的该字段数据依然是原数据。</p><p>虽然说这种方式在一定程度上可以避免数据缺失等问题，但是在某些业务场景下我们就需要更新某些字段的数据为 null。</p><blockquote><p>解决方法</p></blockquote><p>可以在实体类上设置该字段的字段策略。将该字段的字段策略设置为忽略即可。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@TableField(updateStrategy = FieldStrategy.IGNORED)</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Student</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TableId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IdType.AUTO)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Long id;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TableField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateStrategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FieldStrategy.IGNORED) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置字段策略为忽略</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当设置策略之后，我们需要更新name字段为null的时候，就不会出现无法更新的情况。</p><h2 id="分页" tabindex="-1">分页 <a class="header-anchor" href="#分页" aria-label="Permalink to &quot;分页&quot;">​</a></h2><p>分页可分为逻辑分页和物理分页。</p><ul><li>逻辑分页是指一次性把全部数据查询出来加载进内存中，然后通过逻辑操作将全部数据进行分页。优点是减少了数据库I/O次数（只查询一次），适合频繁访问、数据量少的情况。缺点是不适合大数据量，全部数据加载到内存中容易造成内存溢出。</li><li>物理分页是指利用SQL的limit 关键字。直接在数据库中进行分页查询。优点是适合大数据量。缺点是频繁查询数据库，增大了数据库的I/O次数，从而消耗数据库的性能。</li></ul><blockquote><p>mybatisplus 实现分页的方式有2种</p></blockquote><ol><li>直接使用内置的分页插件来进行分页。（不手写SQL的情况下）</li><li>直接使用内置的分页插件来进行分页。（手写SQL的情况下）</li></ol><p>首页先要配置mybatiplus的分页插件</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MapperScan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.shuyx.shuyxuser.mapper&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//指明mapper接口的位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MybatisPlusConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 添加分页插件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Bean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MybatisPlusInterceptor </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mybatisPlusInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        MybatisPlusInterceptor interceptor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MybatisPlusInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        interceptor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addInnerInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaginationInnerInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DbType.MYSQL));</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//如果配置多个插件,切记分页最后添加</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //interceptor.addInnerInterceptor(new PaginationInnerInterceptor()); 如果有多数据源可以不配具体类型 否则都建议配上具体的DbType</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> interceptor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="不手写sql的情况" tabindex="-1">不手写SQL的情况 <a class="header-anchor" href="#不手写sql的情况" aria-label="Permalink to &quot;不手写SQL的情况&quot;">​</a></h3><p>不手写SQL的情况是指直接调用mybatisplus的分页方法来进行分页。</p><ul><li>优点：对于单表分页查询，这样很方便。</li><li>确定：对于多表联查的分页查询。可以通过另一个框架mybatisplus-join来完成。</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//分页查询</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pagelist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UserDTO userDTO) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    QueryWrapper&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UserEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; queryWrapper </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //用户名称查询</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotBlank</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userDTO.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUserName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        queryWrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">like</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,userDTO.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUserName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //分页设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Page&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UserEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Page&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userDTO.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPageNum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userDTO.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPageSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //开始分页查询，直接调用selectPage分页方法进行分页查询</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Page&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UserEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userMapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">selectPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page, queryWrapper);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //查询出来的分页数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    system.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(list)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,22)]))}const y=i(t,[["render",p]]);export{g as __pageData,y as default};
