import{_ as i,c as n,o as a,ak as l}from"./chunks/framework.CmzJUe0_.js";const p="/assets/nginx_20240918155812.C1vgBRxA.png",c=JSON.parse('{"title":"Nginx容器笔记","description":"","frontmatter":{"title":"Nginx容器笔记","date":"2024-09-18T00:00:00.000Z","sidebar":"auto","tags":["Nginx"]},"headers":[],"relativePath":"blogs/Nginx/Nginx容器笔记.md","filePath":"blogs/Nginx/Nginx容器笔记.md"}'),h={name:"blogs/Nginx/Nginx容器笔记.md"};function t(e,s,k,g,d,r){return a(),n("div",null,s[0]||(s[0]=[l(`<p>[toc]</p><h1 id="nginx容器笔记" tabindex="-1">Nginx容器笔记 <a class="header-anchor" href="#nginx容器笔记" aria-label="Permalink to &quot;Nginx容器笔记&quot;">​</a></h1><h2 id="下载nginx镜像" tabindex="-1">下载Nginx镜像 <a class="header-anchor" href="#下载nginx镜像" aria-label="Permalink to &quot;下载Nginx镜像&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载nginx镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><h2 id="部署nginx容器" tabindex="-1">部署Nginx容器 <a class="header-anchor" href="#部署nginx容器" aria-label="Permalink to &quot;部署Nginx容器&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建并后台启动nginx容器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --name nginx01 容器名称为nginx01</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -p 38081:80 主机的38081端口映射到Nginx容器的80端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -d 后台运行，默认不会进入容器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># nginx 镜像名，指定生成该容器的镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 38081:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入到nginx容器的终端中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询所有容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><p>访问nginx首页 <code>http://localhost:38081</code>。若如图所示，则表示Nginx容器部署成功。</p><p><img src="`+p+`" alt="nginx_20240918155812.png"></p><p>如果是在云服务器上部署Nginx容器，记得在云服务器的防火墙上开通38081端口。</p><h3 id="设置nginx容器数据卷" tabindex="-1">设置Nginx容器数据卷 <a class="header-anchor" href="#设置nginx容器数据卷" aria-label="Permalink to &quot;设置Nginx容器数据卷&quot;">​</a></h3><p>Nginx容器中有三个目录需要设置数据卷。方便日后修改。</p><ul><li>/etc/nginx/conf.d 目录：nginx容器的配置文件</li><li>/usr/share/nginx/html 目录：nginx容器的网页内容目录</li><li>/var/log/nginx 目录：nginx容器的日志目录</li></ul><p>① 先创建Nginx容器数据卷</p><p>在主机上创建一个目录作为数据卷目录</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01</span></span></code></pre></div><p>② 把上面部署的Nginx容器中的/etc/nginx目录中的文件复制到数据卷目录中</p><p>这一步的目的是拷贝配置,页面，日志文件，否则新的Nginx容器没有这些文件，会无法成功运行。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01:/etc/nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01/conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01:/usr/share/nginx/html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01/html</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01:/var/log/nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01/log</span></span></code></pre></div><p>③ 删除之前的nginx容器</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01</span></span></code></pre></div><p>④ 启动新的nginx容器，并设置容器数据卷目录</p><p>因此部署新的Nginx容器的启动命令可以修改为下面的。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 38081:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx01</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01/conf:/etc/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01/html:/usr/share/nginx/html</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxx/nginx01/log:/var/log/nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># \`/xxx/nginx01\` 是主机的某个目录，需要自己提前创建。</span></span></code></pre></div>`,23)]))}const x=i(h,[["render",t]]);export{c as __pageData,x as default};
