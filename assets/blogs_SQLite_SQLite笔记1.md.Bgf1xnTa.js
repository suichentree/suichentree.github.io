import{_ as i,c as a,o as n,ak as h}from"./chunks/framework.CmzJUe0_.js";const l="/assets/sqlite_20240516105902.CdxoNkGi.png",g=JSON.parse('{"title":"SQLite笔记1","description":"","frontmatter":{"title":"SQLite笔记1","date":"2024-05-16T00:00:00.000Z","sidebar":"auto","categories":["SQLite"],"tags":["SQLite"]},"headers":[],"relativePath":"blogs/SQLite/SQLite笔记1.md","filePath":"blogs/SQLite/SQLite笔记1.md"}'),t={name:"blogs/SQLite/SQLite笔记1.md"};function p(k,s,e,E,d,r){return n(),a("div",null,s[0]||(s[0]=[h('<p>[toc]</p><h1 id="sqlite笔记1" tabindex="-1">SQLite笔记1 <a class="header-anchor" href="#sqlite笔记1" aria-label="Permalink to &quot;SQLite笔记1&quot;">​</a></h1><p>当前日期为2024-05-16。当前SQLite的版本为3.45.3</p><h2 id="sqlite介绍" tabindex="-1">SQLite介绍 <a class="header-anchor" href="#sqlite介绍" aria-label="Permalink to &quot;SQLite介绍&quot;">​</a></h2><p>SQLite是一个实现了自给自足的、无服务器的、零配置的、事务性的 SQL 数据库引擎。</p><p>SQLite是一个零配置的数据库，这意味着与其他数据库不一样，您不需要在系统中配置。</p><blockquote><p>为什么要用 SQLite？</p></blockquote><ul><li>SQLite是无服务器的、零配置的，即不需要一个单独的服务器，不需要安装或管理。</li><li>SQLite 是自给自足的，这意味着不需要任何外部的依赖。</li><li>SQLite 是非常小的，是轻量级的，完全配置时小于 400KiB。一个完整的 SQLite 数据库就是存储在一个单一的跨平台的磁盘文件。</li><li>SQLite 事务是完全兼容 ACID 的，允许从多个进程或线程安全访问。</li></ul><p><a href="https://www.sqlite.org/index.html" target="_blank" rel="noreferrer">SQLite官网地址：https://www.sqlite.org/index.html</a></p><h2 id="sqlite安装" tabindex="-1">SQLite安装 <a class="header-anchor" href="#sqlite安装" aria-label="Permalink to &quot;SQLite安装&quot;">​</a></h2><blockquote><p>在 Windows 上安装 SQLite</p></blockquote><ol><li>先在SQLite官网下载SQLite相关文件。如sqlite-tools-win32-<em>.zip 和 sqlite-dll-win32-</em>.zip 压缩文件。</li><li>然后可以在桌面创建文件夹 sqlite3 , 在该文件夹中解压上面两个下载文件。将得到 sqlite3.def、sqlite3.dll 和 sqlite3.exe 等文件。</li><li>然后把sqlite3文件夹的路径 <code>C:\\Users\\18271\\Desktop\\sqlite3</code>，添加到windows系统的环境变量中。</li><li>最后在windows的终端中，使用 sqlite3 命令，将显示如下结果。</li></ol><p><img src="'+l+`" alt="sqlite_20240516105902.png"></p><h2 id="sqlite-点命令" tabindex="-1">SQLite 点命令 <a class="header-anchor" href="#sqlite-点命令" aria-label="Permalink to &quot;SQLite 点命令&quot;">​</a></h2><p>之前我们可以在windows终端中输入sqlite3 命令，从而进入到sqlite 终端中。</p><p>现在在sqlite 终端中，我们可以使用sqlite提供的命令，来对sqlite进行各种操作。这些命令称为 SQLite 的点命令，因为这些命令的不同之处在于它们不以分号 ; 结束。</p><p>sqlite中一些常用的点命令如下所示</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.help</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	            # 显示帮助消息。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.databases</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	        # 列出数据库的名称及其所依附的文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.tables</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # 列出表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OFF</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 开启或关闭 echo 命令。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.exit</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	            # 退出 SQLite 终端</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.quit</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	            # 退出 SQLite 提示符。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.explain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OFF</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 开启或关闭适合于 EXPLAIN 的输出模式。如果没有带参数，则为 EXPLAIN on，即开启 EXPLAIN。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.show</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	            # 显示各种设置的当前值。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.stats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OFF</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 开启或关闭统计。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.schema</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> table_name</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 显示表 CREATE 语句</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 导入来自 FILE 文件的数据到 TABLE 表中。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 开启或关闭日志。FILE 文件可以是 stderr（标准错误）/stdout（标准输出）。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置输出模式，MODE 可以是下列之一：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># csv 逗号分隔的值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># column 左对齐的列</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># html HTML 的 &lt;table&gt; 代码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># insert TABLE 表的 SQL 插入（insert）语句</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># line 每行一个值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># list 由 .separator 字符串分隔的值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tabs 由 Tab 分隔的值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcl TCL 列表元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MODE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FILENAME</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 发送输出到 FILENAME 文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stdout</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 发送输出到屏幕。</span></span></code></pre></div><h2 id="sqlite-数据类型" tabindex="-1">SQLite 数据类型 <a class="header-anchor" href="#sqlite-数据类型" aria-label="Permalink to &quot;SQLite 数据类型&quot;">​</a></h2><p>在 SQLite 中，值的数据类型与值本身是相关的，而不是与它的容器相关。相比其他数据库的数据类型，SQLite的数据类型更为动态。</p><p>SQLite有如下的5种数据类型。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NULL	    值是一个 NULL 值。</span></span>
<span class="line"><span>INTEGER	    值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。</span></span>
<span class="line"><span>REAL	    值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。</span></span>
<span class="line"><span>TEXT	    值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。</span></span>
<span class="line"><span>BLOB	    值是一个 blob 数据，完全根据它的输入存储。</span></span></code></pre></div><p>SQLite的数据类型相比其他数据库的数据类型更加动态。SQLite的一种数据类型相当于其他数据库的多种数据类型。 例如 INTEGER 数据类型，代表整数。可以包含6 种不同的不同长度的整数数据类型。</p><p>下面是其他数据库的数据类型 和 SQLite数据类型的对比。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他数据库的多个整数数据类型，相当于SQLite的一种整数数据类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                     vs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      INTEGER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INTEGER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TINYINT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SMALLINT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MEDIUMINT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BIGINT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 文本字符串数据类型对比</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CHARACTER(20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)           vs      TEXT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VARCHAR(255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VARYING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CHARACTER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NCHAR(55</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TEXT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 浮点数类型对比</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 vs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      REAL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DOUBLE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FLOAT</span></span></code></pre></div><blockquote><p>Boolean 数据类型</p></blockquote><p>SQLite 没有单独的 Boolean 数据类型。布尔值会被存储为整数 0（false）和 1（true）。</p><blockquote><p>Date 与 Time 数据类型</p></blockquote><p>SQLite 没有一个单独的用于存储日期和/或时间的存储类，但 SQLite 能够把日期和时间设置为 TEXT、REAL 或 INTEGER 数据类型。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>若TEXT数据类型 存储日期时间数据，则数据格式会为&quot;YYYY-MM-DD HH:MM:SS.SSS&quot;</span></span>
<span class="line"><span>若REAL数据类型 存储日期时间数据，则数据会是从公元前 4714 年 11 月 24 日格林尼治时间的正午开始算起的天数。</span></span>
<span class="line"><span>若INTEGER数据类型 存储日期时间数据，则数据会是从 1970-01-01 00:00:00 UTC 算起的秒数。</span></span></code></pre></div><h2 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h2><h3 id="创建数据库" tabindex="-1">创建数据库 <a class="header-anchor" href="#创建数据库" aria-label="Permalink to &quot;创建数据库&quot;">​</a></h3><p>在SQLite中，我们可以使用 sqlite3 命令来用来创建新的 SQLite 数据库文件。</p><p>语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 在当前目录下创建一个db文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite3 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DatabaseName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span></span></code></pre></div><p>例子</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 此处是windows系统终端。在桌面创建一个test1.db的文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:\\Users\\18271\\Desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sqlite3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test1.db</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SQLite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.45.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2024-04-15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 13:34:05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (UTF-16 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> I/O</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.help&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hints.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 然后在sqlite终端中通过点命名 .databases 查看db文件的信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.databases</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示test1.db文件里有一个数据库，名称为main,拥有读写权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8271</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esktop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">est1.db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> r/w</span></span></code></pre></div><p>总结：在SQLite中，我们创建数据库，需要先创建一个载体，即db文件。这个db文件里面包含了所有的数据，包含数据库，表，表中数据，配置数据等。并且默认的数据库名称就是main。</p><h3 id="附加数据库" tabindex="-1">附加数据库 <a class="header-anchor" href="#附加数据库" aria-label="Permalink to &quot;附加数据库&quot;">​</a></h3><p>通常情况下,我们创建的db文件中，都会包含一个默认的数据库，该数据库名称为main。</p><p>但是如果我们想在一个db文件中创建多个数据库，我们可以通过 SQLite 的 ATTACH DATABASE 语句来创建一个附加数据库。</p><blockquote><p>什么是附加数据库?</p></blockquote><p>db文件中的main数据库就是主数据库，除了主数据库之外的数据库都是附加数据库。</p><blockquote><p>语法</p></blockquote><p>SQLite 的 ATTACH DATABASE 语句的基本语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 创建一个db文件，如果db文件已存在，则把db文件名称与附加数据库 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;attach_database_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 绑定在一起。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ATTACH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db_file_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attach_database_name;</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在sqlite终端中使用 ATTACH DATABASE 语句</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ATTACH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DATABASE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test1.db&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;demo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 点命名 .databases 查看db文件的信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.databases</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8271</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esktop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">est1.db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> r/w</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">demo:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8271</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esktop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">est1.db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> r/w</span></span></code></pre></div><p>可以看到test1.db文件中除了main主数据库之外，还多了一个附加数据库demo。</p><h2 id="表" tabindex="-1">表 <a class="header-anchor" href="#表" aria-label="Permalink to &quot;表&quot;">​</a></h2><h3 id="创建表" tabindex="-1">创建表 <a class="header-anchor" href="#创建表" aria-label="Permalink to &quot;创建表&quot;">​</a></h3><p>SQLite 的 CREATE TABLE 语句用于在任何给定的数据库创建一个新表。</p><p>CREATE TABLE 语句的基本语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   column1 datatype </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   column2 datatype,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   column3 datatype,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   .....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   columnN datatype,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先与test1.db文件建立链接，从而进入到sqlite终端中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:\\Users\\18271\\Desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sqlite3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test1.db</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SQLite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.45.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2024-04-15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 13:34:05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (UTF-16 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> I/O</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.help&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hints.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 此处是sqlite终端,创建t_user表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CREATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     PRIMARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           TEXT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过点命名.tables 显示数据库中的表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.tables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t_user</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过点命名.schema 显示t_user表的create语句</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.schema</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CREATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     PRIMARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           TEXT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="删除表" tabindex="-1">删除表 <a class="header-anchor" href="#删除表" aria-label="Permalink to &quot;删除表&quot;">​</a></h3><p>可以使用 SQLite 的 DROP TABLE 语句用来删除表定义及其所有相关数据。</p><p>DROP TABLE 语句语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法1：直接删除db文件中的某个表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法2: 删除某个表，这种方式需要先进入到db文件中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name;</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先与test1.db文件建立链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:\\Users\\18271\\Desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sqlite3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test1.db</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先查询文件中有那些表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.tables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t_user</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除文件中的t_user表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DROP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="约束" tabindex="-1">约束 <a class="header-anchor" href="#约束" aria-label="Permalink to &quot;约束&quot;">​</a></h3><p>当我们在创建表的时候，我们可以给表的列添加一些约束，从而确保了数据库中数据的准确性和可靠性。</p><p>约束可以是列级或表级。列级约束仅适用于列，表级约束被应用到整个表。</p><p>以下是在 SQLite 中常用的约束。</p><ul><li>NOT NULL 约束：确保某列不能有 NULL 值。</li><li>DEFAULT 约束：当某列没有指定值时，为该列提供默认值。</li><li>UNIQUE 约束：确保表中某列的所有值是不同的。</li><li>PRIMARY KEY 约束 用于标识数据库表中的主键。</li><li>CHECK 约束：CHECK 约束确保某列中的所有值满足一定条件。</li></ul><h4 id="not-null-约束" tabindex="-1">NOT NULL 约束 <a class="header-anchor" href="#not-null-约束" aria-label="Permalink to &quot;NOT NULL 约束&quot;">​</a></h4><p>默认情况下，列可以保存 NULL 值。如果您不想某列有 NULL 值，那么需要在该列上定义此约束，指定在该列上不允许 NULL 值。</p><p>NULL 与没有数据是不一样的，NULL 代表着未知的数据。</p><blockquote><p>例子</p></blockquote><p>t_user表的NAME 和 AGE 列指定不接受 NULL 值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   AGE            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ADDRESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="default-约束" tabindex="-1">DEFAULT 约束 <a class="header-anchor" href="#default-约束" aria-label="Permalink to &quot;DEFAULT 约束&quot;">​</a></h4><p>DEFAULT 约束在 INSERT INTO 语句没有提供一个特定的值时，为列提供一个默认值。</p><blockquote><p>例子</p></blockquote><p>t_user表的 ADDRESS 列默认值为beijing</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ADDRESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;beijing&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="unique-约束" tabindex="-1">UNIQUE 约束 <a class="header-anchor" href="#unique-约束" aria-label="Permalink to &quot;UNIQUE 约束&quot;">​</a></h4><p>UNIQUE 约束防止在一个列的不同记录中都存在相同的值。</p><blockquote><p>例子</p></blockquote><p>t_user表的 NAME 列有 UNIQUE 约束。意思是指表中不能有相同的名称。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> UNIQUE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="check-约束" tabindex="-1">CHECK 约束 <a class="header-anchor" href="#check-约束" aria-label="Permalink to &quot;CHECK 约束&quot;">​</a></h4><p>CHECK 约束会检测记录中的数据是否符合条件。如果条件值为 false，则记录违反了约束，且不能输入到表。</p><blockquote><p>例子</p></blockquote><p>t_user表的 AGE 列有 CHECK 约束。因此 age 列的数值必须大于10,否则无法插入到表中。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   AGE            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     CHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AGE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="primary-key-约束" tabindex="-1">PRIMARY KEY 约束 <a class="header-anchor" href="#primary-key-约束" aria-label="Permalink to &quot;PRIMARY KEY 约束&quot;">​</a></h4><p>PRIMARY KEY 约束 用于标识数据库表中的主键。</p><p>在一个表中可以有多个具有 UNIQUE约束 的列，但只能有一个主键。在设计数据库表时，主键是很重要的。</p><p>主键是用来唯一标识数据库表中的各行/记录。主键必须包含唯一值。主键列不能有 NULL 值。</p><p><span style="color:red;">注意在 SQLite 中，主键可以是 NULL，这是与其他数据库不同的地方。</span></p><blockquote><p>例子</p></blockquote><p>t_user表的 ID列 为主键。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ID             </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     PRIMARY KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   AGE            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="删除约束" tabindex="-1">删除约束 <a class="header-anchor" href="#删除约束" aria-label="Permalink to &quot;删除约束&quot;">​</a></h4><p>在 SQLite 中，要删除表的约束，通常需要使用 ALTER TABLE 语句，并指定要删除的约束类型。</p><blockquote><p>删除主键约束</p></blockquote><p>table_name 是你要操作的表名，primary_key_name 是要删除的主键约束的名称。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> primary_key_name;</span></span></code></pre></div><blockquote><p>删除唯一约束</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unique_constraint_name;</span></span></code></pre></div><blockquote><p>删除外键约束</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foreign_key_constraint_name;</span></span></code></pre></div><h3 id="autoincrement-自动递增" tabindex="-1">Autoincrement（自动递增） <a class="header-anchor" href="#autoincrement-自动递增" aria-label="Permalink to &quot;Autoincrement（自动递增）&quot;">​</a></h3><p>SQLite 的 AUTOINCREMENT 是一个关键字，用于表中的字段值自动递增。我们可以在创建表时在特定的列名称上使用 AUTOINCREMENT 关键字实现该字段值的自动增加。</p><p>关键字 AUTOINCREMENT 只能用于整型（INTEGER）字段。</p><p>AUTOINCREMENT 关键字的基本用法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   column1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOINCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   column2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOINCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="表中数据" tabindex="-1">表中数据 <a class="header-anchor" href="#表中数据" aria-label="Permalink to &quot;表中数据&quot;">​</a></h2><h3 id="insert-语句" tabindex="-1">insert 语句 <a class="header-anchor" href="#insert-语句" aria-label="Permalink to &quot;insert 语句&quot;">​</a></h3><p>SQLite 的 INSERT INTO 语句用于向数据库的某个表中添加新的数据行。</p><p>INSERT INTO 语句如下所示</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法1 向表中所有列进行赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( value1,value2,value3,...valueN );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法2 向表中指定列进行赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE_NAME [( column1, column2, column3,...columnN )]  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value1, value2, value3,...valueN);</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用insert语句向表中插入两条记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bob&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 11,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;beijing&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (id,name,age,address) VALUES ( </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Paul&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 32,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;beijing&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><h3 id="select-语句" tabindex="-1">select 语句 <a class="header-anchor" href="#select-语句" aria-label="Permalink to &quot;select 语句&quot;">​</a></h3><p>SELECT 语句用于从 SQLite 数据库表中获取数据，以结果集的形式返回数据。</p><p>SELECT 语句语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法1 从表中获取所有数据的所有列信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法2 从表中获取所有数据的指定列信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2, columnN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name;</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前两个命令被用来设置正确格式化的输出方式。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> column</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取表中所有记录数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  address</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ----</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ---</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   bob</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   11</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   beijing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Paul</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   beijing</span></span></code></pre></div><h3 id="where-语句" tabindex="-1">where 语句 <a class="header-anchor" href="#where-语句" aria-label="Permalink to &quot;where 语句&quot;">​</a></h3><p>WHERE 子句用于对一个表或多个表的数据进行条件筛选。</p><p>WHERE 子句语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">## 从表中获取指定条件的记录数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2, columnN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [condition]</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取age在 25-50 之间的记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AND</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取name不为null的记录,并且记录只包含name和age列</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name,age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="update-语句" tabindex="-1">update 语句 <a class="header-anchor" href="#update-语句" aria-label="Permalink to &quot;update 语句&quot;">​</a></h3><p>UPDATE 语句用于修改表中已有的记录。可以使用带有 WHERE 子句的 UPDATE 语句来更新选定行记录，否则所有的行记录都会被更新。</p><p>update 语句语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">## 更新指定条件的行记录中的某些列的数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value1, column2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value2...., columnN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> valueN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [condition];</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果您想修改 t_user 表中 所有行记录中的 address ，则不需要使用 WHERE 子句</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">UPDATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Texas&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 它会更新 ID 为 6 的行记录的地址为Texas</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">UPDATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Texas&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="delete-语句" tabindex="-1">delete 语句 <a class="header-anchor" href="#delete-语句" aria-label="Permalink to &quot;delete 语句&quot;">​</a></h3><p>DELETE 语句用于删除表中已有的行记录。可以使用带有 WHERE 子句的 DELETE 语句来删除选定行记录，否则所有的记录都会被删除。</p><p>delete 语句语法如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 删除表中指定条的行记录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [condition];</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除 ID 为 7 的行记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DELETE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除 t_user表 所有的行记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DELETE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="like-子句" tabindex="-1">like 子句 <a class="header-anchor" href="#like-子句" aria-label="Permalink to &quot;like 子句&quot;">​</a></h3><p>like 子句主要是通过通配符来匹配文本值。like 子句通常会与 where 语句搭配使用。</p><blockquote><p>like 子句语法如下</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 从表中查询出 column 字段的数据匹配文本的行记录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column_list  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIKE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 通配符表达式</span></span></code></pre></div><blockquote><p>like 子句使用的通配符如下：</p></blockquote><ul><li>百分号 （%） ：代表零个、一个或多个数字或字符。</li><li>下划线 （_） ：代表一个单一的数字或字符。</li></ul><blockquote><p>通配符具体用法如下</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;200%&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#查找以 200 开头的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%200%&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#查找任意位置包含 200 的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_00%&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#查找第二位和第三位为 00 的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2_%_%&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#查找以 2 开头，且长度至少为 3 个字符的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%2&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    #查找以 2 结尾的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;_2%3&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#查找第二位为 2，且以 3 结尾的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2___3&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	#查找长度为 5 位数，且以 2 开头以 3 结尾的任意值</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询表中 AGE 以 2 开头的所有记录：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询表中 address 中包含一个连字符（-）的所有记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%-%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="glob-子句" tabindex="-1">glob 子句 <a class="header-anchor" href="#glob-子句" aria-label="Permalink to &quot;glob 子句&quot;">​</a></h3><p>glob 子句也是用来匹配通配符指定模式的文本值。glob 子句 与 like 子句的功能相同，但是glob 子句是大小写敏感的。</p><blockquote><p>glob 子句语法如下</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 从表中查询出 column 字段的数据匹配文本的行记录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column_list  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column GLOB 通配符表达式</span></span></code></pre></div><blockquote><p>glob 子句使用的通配符如下：</p></blockquote><ul><li>*：匹配零个、一个或多个数字或字符。</li><li>?：代表一个单一的数字或字符。</li><li><code>[...]</code>：匹配方括号内指定的字符之一。例如，[abc] 匹配 &quot;a&quot;、&quot;b&quot; 或 &quot;c&quot; 中的任何一个字符。</li><li><code>[^...]</code>：匹配不在方括号内指定的字符之一。例如，[^abc] 匹配不是 &quot;a&quot;、&quot;b&quot; 或 &quot;c&quot; 中的任何一个字符的字符。</li></ul><blockquote><p>通配符具体用法如下</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;200*&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 查找以 200 开头的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;*200*&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 查找任意位置包含 200 的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;?00*&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 查找第二位和第三位为 00 的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2??&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 查找以 2 开头，且长度为 3 个字符的任意值，例如，它可能匹配 &quot;200&quot;、&quot;2A1&quot;、&quot;2B2&quot; 等值。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;*2&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	    # 查找以 2 结尾的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;?2*3&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 查找第二位为 2，且以 3 结尾的任意值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SALARY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2???3&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 查找长度为 5 位数，且以 2 开头以 3 结尾的任意值</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询表中 AGE 以 2 开头的所有记录：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询表中 address 中包含一个连字符（-）的所有记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  GLOB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;*-*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 匹配以 &quot;A&quot; 或 &quot;B&quot; 开头的产品名称。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> products</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> product_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[AB]%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 匹配不以 &quot;X&quot; 或 &quot;Y&quot; 开头的产品代码。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> products</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> product_code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[^XY]%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="limit-子句" tabindex="-1">limit 子句 <a class="header-anchor" href="#limit-子句" aria-label="Permalink to &quot;limit 子句&quot;">​</a></h3><p>LIMIT 子句用于限制由 SELECT 语句返回的数据数量。</p><blockquote><p>limit 子句语法如下</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法1：返回第一行到第num行的数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2, columnN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 语法2：返回从第(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)行后 num行数量的数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2, columnN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num OFFSET a</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询表中 从第1行开始的6行数据记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COMPANY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询表中 从第3行开始的3行数据记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COMPANY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OFFSET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="order-by-子句" tabindex="-1">order by 子句 <a class="header-anchor" href="#order-by-子句" aria-label="Permalink to &quot;order by 子句&quot;">​</a></h3><p>ORDER BY 子句是用来对查询出来的数据记录，根据某个列，按升序或降序顺序排列。</p><blockquote><p>limit 子句语法如下</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ASC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 默认值，可以不写，从小到大，升序排列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 从大到小，降序排列</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name  [WHERE condition]  [ORDER BY column1, column2, .. columnN] [ASC | DESC];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 例子1：从表中根据条件查询数据，然后对查询的数据，先根据 列1 按升序排列，后根据列2 按降序排列</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> select_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column_1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ASC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, column_2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询t_user表的数据，先根据名称进行升序排列,后根据年龄进行降序排列</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> desc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="group-by-子句" tabindex="-1">Group By 子句 <a class="header-anchor" href="#group-by-子句" aria-label="Permalink to &quot;Group By 子句&quot;">​</a></h3><p>SQLite 的 GROUP BY 子句用于与 SELECT 语句一起使用，对查询的数据进行分组处理。</p><p>在 SELECT 语句中，GROUP BY 子句放在 WHERE 子句之后，放在 ORDER BY 子句之前。</p><blockquote><p>Group By 子句语法如下</p></blockquote><p>GROUP BY 子句必须放在 WHERE 子句中的条件之后，必须放在 ORDER BY 子句之前。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2....columnN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询t_course_score 课程分数表中每个人的课程总分</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_course_score</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="having-子句" tabindex="-1">Having 子句 <a class="header-anchor" href="#having-子句" aria-label="Permalink to &quot;Having 子句&quot;">​</a></h3><p>WHERE 子句在所选列上设置条件，而 HAVING 子句则在由 GROUP BY 子句创建的分组上设置条件。</p><p>因此 HAVING 子句允许指定条件来过滤 GROUP BY 子句的分组结果。</p><blockquote><p>Having 子句语法如下</p></blockquote><p>在一个查询中，HAVING 子句必须放在 GROUP BY 子句之后，必须放在 ORDER BY 子句之前。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table1, table2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HAVING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ conditions ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx</span></span></code></pre></div><blockquote><p>例子</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先根据 name 对 t_user的行记录进行分组，然后从分组结果中 筛选出 名称计数 &lt; 2 的行记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HAVING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="join-子句" tabindex="-1">Join 子句 <a class="header-anchor" href="#join-子句" aria-label="Permalink to &quot;Join 子句&quot;">​</a></h3><p>SQLite 的 Join 子句用于结合两个或多个数据库中表的记录。</p><p>SQLite 定义了三种类型的 Join 子句：</p><ul><li>交叉连接 - CROSS JOIN</li><li>内连接 - INNER JOIN</li><li>外连接 - OUTER JOIN</li></ul><h4 id="交叉连接-cross-join" tabindex="-1">交叉连接 - CROSS JOIN <a class="header-anchor" href="#交叉连接-cross-join" aria-label="Permalink to &quot;交叉连接 - CROSS JOIN&quot;">​</a></h4><p>交叉连接会把第一个表的每一行与第二个表的每一行进行匹配。如果两个表分别有 x 和 y 行，则交叉连接的结果记录有 x*y 行。</p><p><span style="color:red;">由于交叉连接（CROSS JOIN）有可能产生非常大的表，使用时必须谨慎，只在适当的时候使用它们。</span></p><blockquote><p>交叉连接（CROSS JOIN）的语法</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CROSS JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table2 xxx</span></span></code></pre></div><blockquote><p>例子</p></blockquote><p>对t_user表和t_department表进行交叉连接，返回查询结果</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqlite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NAME,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DEPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CROSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JOIN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t_department</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="内连接-inner-join" tabindex="-1">内连接 - INNER JOIN <a class="header-anchor" href="#内连接-inner-join" aria-label="Permalink to &quot;内连接 - INNER JOIN&quot;">​</a></h4><p>内连接根据连接条件，把两个表（table1 和 table2）的结合起来创建一个新的结果表。</p><p>内连接查询会把 table1 中的每一行与 table2 中的每一行进行比较，找到所有满足连接条件的匹配行记录。当满足连接条件时，A 和 B 行的每个匹配对的列值会合并成一个结果行。</p><p><span style="color:red;">内连接（INNER JOIN）是最常见的连接类型，是默认的连接类型。INNER 关键字是可选的。</span></p><blockquote><p>内连接（INNER JOIN）的语法</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table1 [INNER] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 连接条件</span></span></code></pre></div><blockquote><p>例子</p></blockquote><p>对t_user表和t_department表进行内连接，查询出满足连接条件（ID相同）的行记录。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ID, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DEPT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INNER JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_department </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t_department</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EMP_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="外连接-outer-join" tabindex="-1">外连接 - OUTER JOIN <a class="header-anchor" href="#外连接-outer-join" aria-label="Permalink to &quot;外连接 - OUTER JOIN&quot;">​</a></h4><p>外连接（OUTER JOIN）是内连接（INNER JOIN）的扩展。</p><p>虽然 SQL 标准定义了三种类型的外连接：LEFT、RIGHT、FULL，但 SQLite 只支持 左外连接（LEFT OUTER JOIN）。</p><blockquote><p>左外连接（LEFT OUTER JOIN）的语法</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LEFT OUTER JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 连接条件 ...</span></span></code></pre></div><blockquote><p>例子</p></blockquote><p>对t_user表和t_department表进行左外连接，查询出满足连接条件（ID相同）的行记录。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ID, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DEPT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LEFT OUTER JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_department</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t_department</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EMP_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h2><p>索引（Index）是一种特殊的查找表，用来加快数据检索。简单地说，索引是一个指向表中数据的指针。一个数据库中的索引与一本书的索引目录是非常相似的。</p><p>索引有助于加快 SELECT 查询和 WHERE 子句，但它会减慢使用 UPDATE 和 INSERT 语句时的数据输入。索引可以创建或删除，但不会影响数据。</p><p>SQLite 使用 CREATE INDEX 语句创建索引。</p><h3 id="单列索引" tabindex="-1">单列索引 <a class="header-anchor" href="#单列索引" aria-label="Permalink to &quot;单列索引&quot;">​</a></h3><p>单列索引是一个只基于表的一个列上创建的索引。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 为表的某个列创建一个单列索引</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name (column_name);</span></span></code></pre></div><h3 id="唯一索引" tabindex="-1">唯一索引 <a class="header-anchor" href="#唯一索引" aria-label="Permalink to &quot;唯一索引&quot;">​</a></h3><p>使用唯一索引不仅是为了性能，同时也为了数据的完整性。唯一索引不允许任何重复的值插入到表中。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 为表的某个列创建一个唯一索引</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> UNIQUE INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name (column_name);</span></span></code></pre></div><h3 id="组合索引" tabindex="-1">组合索引 <a class="header-anchor" href="#组合索引" aria-label="Permalink to &quot;组合索引&quot;">​</a></h3><p>组合索引是基于一个表的两个或多个列上创建的索引。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 将表中的多个列组合在一起， 创建一个组合索引</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name (column1, column2);</span></span></code></pre></div><h3 id="drop-index-索引删除语句" tabindex="-1">DROP INDEX 索引删除语句 <a class="header-anchor" href="#drop-index-索引删除语句" aria-label="Permalink to &quot;DROP INDEX 索引删除语句&quot;">​</a></h3><p>一个索引可以使用 DROP INDEX 语句删除。当删除索引时应特别注意，因为性能可能会下降或提高。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DROP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INDEX</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="事务" tabindex="-1">事务 <a class="header-anchor" href="#事务" aria-label="Permalink to &quot;事务&quot;">​</a></h2><p>事务（Transaction）是一个完整的执行工作单元。这个工作单元通常可以包含多个数据库命令。</p><blockquote><p>事务的ACID属性</p></blockquote><ul><li>原子性（Atomicity）：确保工作单位内的所有的数据库操作都成功完成，否则，事务会在出现故障时终止，之前的操作也会回滚到以前的状态。</li><li>一致性（Consistency）：确保数据库在成功提交的事务上正确地改变状态。</li><li>隔离性（Isolation）：使多个事务的操作相互独立和透明。</li><li>持久性（Durability）：确保已提交事务的结果或效果在系统发生故障的情况下仍然存在。</li></ul><blockquote><p>事务控制命令</p></blockquote><ul><li>BEGIN TRANSACTION 或 BEGIN：开始事务操作。</li><li>COMMIT：把事务中的数据操作更改保存到数据库中。</li><li>ROLLBACK：用于撤消尚未保存到数据库的事务操作。</li></ul><blockquote><p>例子</p></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 开始一个事务，并从表中删除 age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的记录，最后使用 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ROLLBACK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 命令撤消所有的更改。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> BEGIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AGE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ROLLBACK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 开始另一个事务，从表中删除 age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的记录，最后使用 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 命令提交所有的更改。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> BEGIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AGE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> COMMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,242)]))}const y=i(t,[["render",p]]);export{g as __pageData,y as default};
