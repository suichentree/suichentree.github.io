import{_ as i,c as a,o as t,ak as n}from"./chunks/framework.CmzJUe0_.js";const l="/assets/blog_20240506204403.BcTDOBWk.png",p="/assets/blog_20240506205511.DKtbPACr.png",e="/assets/blog_20240506205622.B2cB1Jhd.png",E=JSON.parse('{"title":"vscode导包报错","description":"","frontmatter":{"title":"vscode导包报错","date":"2024-05-06T00:00:00.000Z","sidebar":"auto","categories":["随笔"]},"headers":[],"relativePath":"blogs/随笔/vscode导包报错.md","filePath":"blogs/随笔/vscode导包报错.md"}'),h={name:"blogs/随笔/vscode导包报错.md"};function o(k,s,r,d,c,y){return t(),a("div",null,s[0]||(s[0]=[n(`<p>[toc]</p><h1 id="vscode导包报错显示-modulenotfounderror-no-module-xxx" tabindex="-1">vscode导包报错显示：&quot;ModuleNotFoundError: No module xxx&quot; <a class="header-anchor" href="#vscode导包报错显示-modulenotfounderror-no-module-xxx" aria-label="Permalink to &quot;vscode导包报错显示：&quot;ModuleNotFoundError: No module xxx&quot;&quot;">​</a></h1><p>当我用python写工程中的一处代码之后。运行的时候总是提示 <code>ModuleNotFoundError: No module named xxx</code></p><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>当时的工程目录结构如下所示</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>project</span></span>
<span class="line"><span>|----module01</span></span>
<span class="line"><span>|------test01.py</span></span>
<span class="line"><span>|----module02</span></span>
<span class="line"><span>|------test02.py</span></span></code></pre></div><p>test02.py的代码如下：</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入test01.py中的 Test01Class 类</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module01.test01 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Test01Class</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印Test01Class 类信息</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Test01Class)</span></span></code></pre></div><p>问题描述： 如果在test02.py中导入test01.py中的类或方法或变量。那么vscode会提示找不到模块module01。但是实际上是存在模块module01的。</p><p>问题截图如下</p><p><img src="`+l+`" alt="blog_20240506204403.png"></p><h2 id="问题分析" tabindex="-1">问题分析 <a class="header-anchor" href="#问题分析" aria-label="Permalink to &quot;问题分析&quot;">​</a></h2><p>终端报错：ModuleNotFoundError: No module named xxx。</p><p>是因为vscode是通过python解释器来运行代码的。就算vscode能找到本地其他文件，但是python解释器没有找到本地其他文件。</p><p>在test02.py文件中打印python解释器的搜索路径。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看环境变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.path:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a_path)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印结果如下：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\Desktop\\project\\module02</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\python312.zip</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\DLLs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\Lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages</span></span></code></pre></div><p>可以发现python解释器找不到 project/module01/test01.py文件。因此python解释器才会报ModuleNotFoundError: No module named xxx。错误</p><h2 id="解决方法" tabindex="-1">解决方法 <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法&quot;">​</a></h2><p>在vscode的setting.json里面设置自动将pyton工程的根目录添加到环境变量。从而让python解释器能找到该工程下的所有文件。</p><ol><li>点击左下角齿轮，打开设置。</li></ol><p><img src="`+p+'" alt="blog_20240506205511.png"></p><ol start="2"><li>编辑setting.json</li></ol><p><img src="'+e+`" alt="blog_20240506205622.png"></p><p>添加一行代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;terminal.integrated.env.windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;PYTHONPATH&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${workspaceFolder};\${env:PYTHONPATH}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>表示把当前工程的根目录路径，也添加到python解释器的路径。</p><p>之后再次执行test02.py文件的代码。你会发现python解释器的路径多了一条当前工程的根路径。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看环境变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.path:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a_path)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印结果如下：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\Desktop\\project\\module02</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这一条是新增的，是当前工程的根路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\Desktop\\project</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\python312.zip</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\DLLs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\Lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Users\\86182\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>对于这种问题，可能会发生在python中，也有可能会发生在js中。因为这两种都是解释型语言。</p>`,30)]))}const u=i(h,[["render",o]]);export{E as __pageData,u as default};
