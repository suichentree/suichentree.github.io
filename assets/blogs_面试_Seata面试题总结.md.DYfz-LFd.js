import{_ as e,c as t,o,ak as r}from"./chunks/framework.CmzJUe0_.js";const S=JSON.parse('{"title":"Seata面试题总结","description":"","frontmatter":{"title":"Seata面试题总结","date":"2023-12-13T00:00:00.000Z","sidebar":"auto","categories":["面试"],"tags":["Seata"]},"headers":[],"relativePath":"blogs/面试/Seata面试题总结.md","filePath":"blogs/面试/Seata面试题总结.md"}'),s={name:"blogs/面试/Seata面试题总结.md"};function p(_,a,i,l,c,n){return o(),t("div",null,a[0]||(a[0]=[r('<p>[toc]</p><h1 id="seata面试题总结" tabindex="-1">Seata面试题总结 <a class="header-anchor" href="#seata面试题总结" aria-label="Permalink to &quot;Seata面试题总结&quot;">​</a></h1><h2 id="_2pc协议是什么" tabindex="-1">2PC协议是什么？ <a class="header-anchor" href="#_2pc协议是什么" aria-label="Permalink to &quot;2PC协议是什么？&quot;">​</a></h2><p>目前分布式事务都是基于2PC协议来进行解决的。</p><h2 id="seata的实现原理是什么" tabindex="-1">Seata的实现原理是什么？ <a class="header-anchor" href="#seata的实现原理是什么" aria-label="Permalink to &quot;Seata的实现原理是什么？&quot;">​</a></h2><p>Seata中分布式事务的实现方式通常是基于2PC的方式。</p><p>Seata是分布式事务的解决方案。</p><p>目前主流的分布式事务解决方案都是2PC协议的</p><blockquote><p>2PC协议即两阶段提交协议:</p></blockquote><p>阶段1(Prepare预处理阶段)：提交事务请求 阶段2(Commit提交阶段)：执行事务提交。分为两种情况，正常提交和回退。</p>',10)]))}const h=e(s,[["render",p]]);export{S as __pageData,h as default};
