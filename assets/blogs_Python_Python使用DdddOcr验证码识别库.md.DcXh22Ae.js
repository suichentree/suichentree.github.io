import{_ as a,c as i,o as t,ak as n}from"./chunks/framework.CmzJUe0_.js";const d="/assets/python_20241202160029.BV7XopSz.png",E=JSON.parse('{"title":"Python使用DdddOcr验证码识别库","description":"","frontmatter":{"title":"Python使用DdddOcr验证码识别库","date":"2024-12-02T00:00:00.000Z","sidebar":"auto","categories":["Python"],"tags":["Python"]},"headers":[],"relativePath":"blogs/Python/Python使用DdddOcr验证码识别库.md","filePath":"blogs/Python/Python使用DdddOcr验证码识别库.md"}'),e={name:"blogs/Python/Python使用DdddOcr验证码识别库.md"};function h(p,s,l,r,o,k){return t(),i("div",null,s[0]||(s[0]=[n(`<p>[toc]</p><h1 id="python使用ddddocr验证码识别库" tabindex="-1">Python使用DdddOcr验证码识别库 <a class="header-anchor" href="#python使用ddddocr验证码识别库" aria-label="Permalink to &quot;Python使用DdddOcr验证码识别库&quot;">​</a></h1><p>DdddOcr，又名 带带弟弟OCR。是一个通用的验证码的本地离线OCR识别库。</p><p>DdddOcr，通过大批量生成随机数据后进行深度网络训练。</p><p><a href="https://github.com/sml2h3/ddddocr" target="_blank" rel="noreferrer">DdddOcr项目地址</a></p><h2 id="安装ddddocr库" tabindex="-1">安装DdddOcr库 <a class="header-anchor" href="#安装ddddocr库" aria-label="Permalink to &quot;安装DdddOcr库&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install ddddocr</span></span></code></pre></div><h2 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ddddocr</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ocr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ddddocr.DdddOcr()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    img_bytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.read()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ocr.classification(img_bytes)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span></code></pre></div><h2 id="其他网上例子" tabindex="-1">其他网上例子 <a class="header-anchor" href="#其他网上例子" aria-label="Permalink to &quot;其他网上例子&quot;">​</a></h2><p><img src="`+d+'" alt="python_20241202160029.png"></p>',11)]))}const y=a(e,[["render",h]]);export{E as __pageData,y as default};
