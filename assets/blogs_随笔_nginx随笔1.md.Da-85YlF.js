import{_ as i,c as a,o as n,ak as t}from"./chunks/framework.CmzJUe0_.js";const d=JSON.parse('{"title":"nginx中的try_files 和 alias,root","description":"","frontmatter":{"title":"nginx中的try_files 和 alias,root","date":"2021-07-12T00:00:00.000Z","sidebar":"auto","categories":["前端","随笔"],"tags":["Nginx"]},"headers":[],"relativePath":"blogs/随笔/nginx随笔1.md","filePath":"blogs/随笔/nginx随笔1.md"}'),l={name:"blogs/随笔/nginx随笔1.md"};function e(p,s,h,o,r,k){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="nginx中的try-files" tabindex="-1">nginx中的try_files <a class="header-anchor" href="#nginx中的try-files" aria-label="Permalink to &quot;nginx中的try_files&quot;">​</a></h2><ol><li>try_files会按指定的顺序查找存在的文件，并对第一个找到的文件进行请求处理；</li><li>try_files也可以对请求进行重定向</li></ol><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当用户请求 <code>http://localhost/example</code> 时，这里的 <code>$uri</code> 就是 /example。 try_files 会到硬盘里尝试找这个文件。如果存在名为 <code>/$root/example</code>（其中 $root 是项目代码安装目录）的文件，就直接把这个文件的内容发送给用户。</p><p>若目录中没有叫 example 的文件。然后就看 <code>$uri/</code>，增加了一个 /，也就是看有没有名为 <code>/$root/example/</code> 的目录。 找不到就会尝试最后一个选项 /index.html，此时nginx 发起一个 HTTP 请求到<code>http://localhost/index.html</code>上。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">loaction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri @apache;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#重定向到@apache的请求上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">loaction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @apache{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://127.0.0.1:88</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当try_files找不到指定文件时，可以让其实现请求重定向的功能</p><h2 id="nginx中的alias-root" tabindex="-1">nginx中的alias,root <a class="header-anchor" href="#nginx中的alias-root" aria-label="Permalink to &quot;nginx中的alias,root&quot;">​</a></h2><blockquote><p>①：root</p></blockquote><p>root的处理结果是：root路径 ＋ location路径</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /request_path/image/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/local_path/image/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当客户端请求 /request_path/image/cat.png 的时候，Nginx把请求映射为/local_path/image/request_path/image/cat.png。</p><blockquote><p>②：alias</p></blockquote><span style="color:red;"><ol><li>alias后面必须要用<code>/</code>结束，否则会找不到文件的。而root则可有可无。</li><li>alias只能位于location块</li></ol></span><p>alias的处理结果是：使用alias路径替换location路径</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /request_path/image/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    alias </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/local_path/image/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当客户端请求 /request_path/image/cat.png 的时候，Nginx把请求映射为/local_path/image/cat.png。</p>`,17)]))}const g=i(l,[["render",e]]);export{d as __pageData,g as default};
